{"version":3,"sources":["components/Loader.jsx","components/PageLoader.jsx","components/Alert.jsx","auth/Login.jsx","routes/AuthRouter.jsx","components/Sidebar.jsx","components/Header.jsx","components/Modal.jsx","components/TopCard.jsx","source/Barcodes.jsx","tools/ApiRequests.js","source/Dashboard.jsx","source/Labels.jsx","source/Settings.jsx","source/Stats.jsx","source/Users.jsx","source/Workers.jsx","source/Ticket.jsx","source/Pricing.jsx","source/GeneateLabel.jsx","routes/DashboardRouter.jsx","App.js","reportWebVitals.js","index.js","tools/helper.js","env.js"],"names":["Loader","props","className","role","PageLoader","alert","message","Login","state","showPassword","loader","reCaptcha","componentDidMount","document","title","handlePasswordVisiblity","setState","login","e","preventDefault","recaptcha","execute","params","username","target","value","password","axios","post","server","then","rsp","Cookies","set","data","payload","token","window","location","href","catch","err","response","onResolved","getResponse","this","onSubmit","type","placeholder","name","autoFocus","required","onClick","ref","sitekey","RECAPTCHA_KEY","PureComponent","AuthRouter","body","classList","add","path","component","Sidebar","tab","split","isAdmin","config","superAccess","isAllLoaded","isLogin","logout","remove","id","to","src","alt","Header","mode","localStorage","getItem","setMode","setItem","getElementById","setAttribute","pretitle","reload","Modal","style","children","TopCard","col","icon","Barcodes","barcodes","duplicateBarcodes","page","totalPages","stats","uploadLoader","uploadMessage","selectedBarcodes","query","queryLoader","total","uploaded","average","priority","express","firstclass","signature","uploadConfirmations","confirmationMessage","readBarcodes","readAverage","get","res","Math","ceil","totalBarcodes","console","log","upload","filter","b","length","selectBarcodes","checked","push","parseInt","splice","indexOf","deleteBarcodes","barcodeIds","deleteAllBarcodes","search","status","setConfirmations","totalPriorityBarcodes","totalExpressBarcodes","totalFirstClassBarcodes","totalSignatureBarcodes","toFixed","color","map","barcode","index","onChange","ocrCode","toUpperCase","Date","createdAt","toDateString","lastDate","htmlFor","cols","rows","ApiRequests","error","put","delete","apiRequests","Dashboard","labels","chart","users","readUsersSpending","history","readStats","canvas","createElement","firstChild","removeChild","appendChild","label","reverse","datasets","count","LineChart","user","email","balance","spent","Labels","recycleLoader","date","fromStreetNumber","fromStreetNumber2","fromZip","fromCity","fromState","fromCountry","toStreetNumber","toStreetNumber2","toZip","toCity","toState","toCountry","isFromAddressVerified","isToAddressVerified","readLabels","localConfig","cancelToken","totalLabels","generateLabel","form","FormData","forEach","key","day","getDate","month","getMonth","year","getFullYear","headers","code","includes","replaceAll","substring","verifyAddress","street1","street2","city","zip","obj","zipCodeLookup","result","endsWith","slice","cityStateLookup","recycleLabel","modalCloseButton","click","weight","fromName","barcodeOCR","pdfPath","download","JSON","parse","statusMessage","cursor","selected","maxLength","Object","keys","item","Settings","update","Stats","updateStats","attr","priority_weight","express_weight","firstclass_weight","signature_weight","priority_minimum_stock","express_minimum_stock","firstclass_minimum_stock","signature_minimum_stock","s","i","defaultValue","Users","pager","readUsers","blockUnblockUser","userId","newUser","hideModal","updateUser","isActive","step","parseFloat","Workers","workers","readWorkers","blockUnblockWorker","newWorker","worker","Ticket","tickets","ticketMessages","totalPage","ticket","action","createTicketMessage","createTicketLoader","statusLoader","sendMessage","sendLoader","readTickets","getTickets","readTicketMessage","getTicket","messages","sendTicketMessage","setTicketStatus","createTicket","subject","lastUpdate","lastMessageFrom","next","height","overflowY","from","maxWidth","fontSize","toLocaleString","Pricing","pop","pricing","pricingObj","create","readPricing","getPricing","addPricing","fromWeight","toWeight","price","createUserPricing","createPricing","updatePricing","updateUserPricing","deletePricing","deleteUserPricing","GeneateLabels","isVerificationInitiated","addressMessage","generateButtonClicked","Tickets","App","checkUserLogin","DashboardRouter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","module","exports","BarChart","dom","Chart","options","scales","yAxes","ticks","callback","gridLines","display","PieChart","tooltips","callbacks","beforeLabel","legend","generateLabels","Legend","content","bgColor","backgroundColor","quillToolbarOptions","header","list","script","indent","direction","size","background","font","align","require","Authorization","checkAccess"],"mappings":"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","file":"static/js/main.f6c3f9f3.chunk.js","sourcesContent":["export default function Loader(props) {\n  return (\n    <div\n      className={\n        props.className\n          ? \"spinner-border d-inline-block \" + props.className\n          : \"spinner-border d-inline-block spinner-border-sm\"\n      }\n      role=\"status\"\n    >\n      <span className=\"sr-only\"></span>\n    </div>\n  );\n}\n","import Loader from \"./Loader\";\nexport default function PageLoader() {\n  return (\n    <div className=\"loader text-center\">\n      <Loader className=\"spinner-border-lg\" />\n    </div>\n  );\n}\n","export default function alert(props) {\n  return (\n    <div className={\"alert alert-icon alert-\" + props.className} role=\"alert\">\n      <strong>{props.message}</strong>\n    </div>\n  );\n}\n","import React, { PureComponent } from \"react\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport { server, RECAPTCHA_KEY } from \"../env\";\n\n// helper components\nimport Loader from \"../components/Loader\";\nimport Alert from \"../components/Alert\";\nimport Recaptcha from \"react-google-invisible-recaptcha\";\n\nexport default class Login extends PureComponent {\n  state = {\n    showPassword: false,\n    loader: \"\",\n    message: \"\",\n    reCaptcha: null,\n  };\n\n  componentDidMount = () => {\n    document.title = \"Login\";\n  };\n\n  handlePasswordVisiblity = () => {\n    this.setState({\n      showPassword: this.state.showPassword ? false : true,\n    });\n  };\n\n  login = async (e) => {\n    e.preventDefault();\n\n    this.setState({\n      loader: <Loader />,\n    });\n\n    await this.recaptcha.execute();\n\n    const params = {\n      username: e.target.username.value,\n      password: e.target.password.value,\n      \"g-recaptcha-response\": this.state.reCaptcha,\n    };\n\n    await axios\n      .post(server + \"/api/admin/login\", params)\n      .then((rsp) => {\n        Cookies.set(\"footprint\", rsp.data.payload.token);\n        this.setState({\n          loader: \"\",\n          message: <Alert className=\"success\" message={rsp.data.message} />,\n        });\n        window.location.href = \"/\";\n      })\n      .catch((err) => {\n        if (err.response) {\n          this.setState({\n            message: (\n              <Alert className=\"danger\" message={err.response.data.message} />\n            ),\n          });\n        }\n        this.setState({\n          loader: \"\",\n        });\n      });\n  };\n\n  onResolved = () => {\n    this.setState({ reCaptcha: this.recaptcha.getResponse() });\n  };\n\n  render() {\n    const { showPassword, loader, message } = this.state;\n    return (\n      <div className=\"col-12 col-md-5 col-xl-4 my-5\">\n        <h1 className=\"display-4 text-center mb-3\">Admin Log-In</h1>\n\n        <p className=\"text-muted text-center mb-5\">\n          Administrative access of Labels\n        </p>\n\n        <form onSubmit={this.login}>\n          {message}\n          <div className=\"form-group\">\n            <label className=\"form-label\"> Username </label>\n\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Enter username\"\n              name=\"username\"\n              autoFocus\n              required\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <div className=\"row\">\n              <div className=\"col\">\n                <label className=\"form-label\"> Password </label>\n              </div>\n            </div>\n\n            <div className=\"input-group input-group-merge\">\n              <input\n                className=\"form-control\"\n                type={showPassword ? \"text\" : \"password\"}\n                placeholder=\"Enter your password\"\n                name=\"password\"\n                required\n              />\n\n              <span\n                className=\"input-group-text\"\n                onClick={this.handlePasswordVisiblity}\n              >\n                {showPassword ? (\n                  <i className=\"fe fe-eye-off\"></i>\n                ) : (\n                  <i className=\"fe fe-eye\"></i>\n                )}\n              </span>\n            </div>\n          </div>\n\n          <button type=\"submit\" className=\"btn btn-lg w-100 btn-primary mb-3\">\n            Log In {loader}\n          </button>\n        </form>\n        <Recaptcha\n          ref={(ref) => (this.recaptcha = ref)}\n          sitekey={RECAPTCHA_KEY}\n          onResolved={this.onResolved}\n        />\n      </div>\n    );\n  }\n}\n","import { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\n// Components\nimport Login from \"../auth/Login\";\nimport Confirm from \"../auth/Confirm\";\n\nexport default function AuthRouter() {\n  document.body.classList.add(\"d-flex-grid\");\n  document.body.classList.add(\"bg-auth\");\n  return (\n    <BrowserRouter>\n      <div className=\"container\">\n        <div className=\"row justify-content-center\">\n          <Switch>\n            {/* <Route path=\"/Confirm\" component={Confirm} /> */}\n            <Route path=\"/\" component={Login} />\n          </Switch>\n        </div>\n      </div>\n    </BrowserRouter>\n  );\n}\n","import React, { PureComponent } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Cookies from \"js-cookie\";\nimport axios from \"axios\";\nimport { server, config } from \"../env\";\n\nexport default class Sidebar extends PureComponent {\n  state = {\n    tab: window.location.href.split(\"/\")[3] || \"/\",\n    isAdmin: false,\n  };\n\n  componentDidMount = async () => {\n    await axios(server + \"/api/admin/access\", config)\n      .then((rsp) => {\n        this.setState({\n          isAdmin: rsp.data.payload.superAccess,\n        });\n      })\n      .catch((err) => {\n        this.setState({\n          isAllLoaded: true,\n          isLogin: false,\n        });\n      });\n  };\n\n  logout = () => {\n    Cookies.remove(\"footprint\");\n    window.location.href = \"/login\";\n  };\n\n  render() {\n    const { tab, isAdmin } = this.state;\n\n    return (\n      <nav\n        className=\"navbar navbar-vertical fixed-start navbar-expand-md navbar-light\"\n        id=\"sidebar\"\n      >\n        <div className=\"container-fluid\">\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-bs-toggle=\"collapse\"\n            data-bs-target=\"#sidebarCollapse\"\n            aria-controls=\"sidebarCollapse\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n\n          {/* <Link className=\"navbar-brand\" to=\"/\">\n            <img\n              src={\n                localStorage.getItem(\"themeMode\") === \"light\"\n                  ? \"/logo2.png\"\n                  : \"/logo1.png\"\n              }\n              className=\"navbar-brand-img mx-auto\"\n              alt=\"...\"\n            />\n          </Link> */}\n\n          <div className=\"navbar-user d-md-none\">\n            <div className=\"dropdown\">\n              <Link\n                to=\"#\"\n                id=\"sidebarIcon\"\n                className=\"dropdown-toggle\"\n                role=\"button\"\n                data-bs-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n              >\n                <div className=\"avatar avatar-sm avatar-online\">\n                  <img\n                    src=\"https://cdn.icon-icons.com/icons2/1378/PNG/512/avatardefault_92824.png\"\n                    className=\"avatar-img rounded-circle\"\n                    alt=\"...\"\n                  />\n                </div>\n              </Link>\n\n              <div\n                className=\"dropdown-menu dropdown-menu-end\"\n                aria-labelledby=\"sidebarIcon\"\n              >\n                <Link to=\"/settings\" className=\"dropdown-item\">\n                  Settings\n                </Link>\n                <hr className=\"dropdown-divider\" />\n                <Link to=\"#\" onClick={this.logout} className=\"dropdown-item\">\n                  Logout\n                </Link>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"collapse navbar-collapse\" id=\"sidebarCollapse\">\n            <ul className=\"navbar-nav\">\n              {isAdmin && (\n                <li className=\"nav-item\">\n                  <Link\n                    className={tab === \"/\" ? \"nav-link active\" : \"nav-link\"}\n                    onClick={() => this.setState({ tab: \"/\" })}\n                    to=\"/\"\n                  >\n                    <i className=\"fe fe-layout\"></i> Dashboard\n                  </Link>\n                </li>\n              )}\n\n              {isAdmin && (\n                <li className=\"nav-item\">\n                  <Link\n                    className={\n                      tab === \"generate-label\" ? \"nav-link active\" : \"nav-link\"\n                    }\n                    onClick={() => this.setState({ tab: \"/generate-label\" })}\n                    to=\"/generate-label\"\n                  >\n                    <i className=\"fe fe-tag\"></i> New Order\n                  </Link>\n                </li>\n              )}\n\n              {isAdmin && (\n                <li className=\"nav-item\">\n                  <Link\n                    className={\n                      tab === \"labels\" ? \"nav-link active\" : \"nav-link\"\n                    }\n                    onClick={() => this.setState({ tab: \"/labels\" })}\n                    to=\"/labels\"\n                  >\n                    <i className=\"fe fe-tag\"></i> Orders\n                  </Link>\n                </li>\n              )}\n\n              <li className=\"nav-item\">\n                <Link\n                  className={\n                    tab === \"barcodes\" ? \"nav-link active\" : \"nav-link\"\n                  }\n                  onClick={() => this.setState({ tab: \"/barcodes\" })}\n                  to=\"/barcodes\"\n                >\n                  <i className=\"fe fe-code\"></i> Barcodes\n                </Link>\n              </li>\n\n              {isAdmin ? (\n                <li className=\"nav-item\">\n                  <Link\n                    className={tab === \"users\" ? \"nav-link active\" : \"nav-link\"}\n                    onClick={() => this.setState({ tab: \"/users\" })}\n                    to=\"/users\"\n                  >\n                    <i className=\"fe fe-users\"></i> Users\n                  </Link>\n                </li>\n              ) : (\n                \"\"\n              )}\n\n              {isAdmin && (\n                <li className=\"nav-item\">\n                  <Link\n                    className={\n                      tab === \"pricing\" ? \"nav-link active\" : \"nav-link\"\n                    }\n                    onClick={() => this.setState({ tab: \"/pricing\" })}\n                    to=\"/pricing\"\n                  >\n                    <i className=\"fe fe-dollar-sign\"></i> Pricing\n                  </Link>\n                </li>\n              )}\n\n              <li className=\"nav-item\">\n                <Link\n                  className={tab === \"tickets\" ? \"nav-link active\" : \"nav-link\"}\n                  onClick={() => this.setState({ tab: \"/tickets\" })}\n                  to=\"/tickets\"\n                >\n                  <i className=\"fe fe-tag\"></i> Tickets\n                </Link>\n              </li>\n\n              {isAdmin && (\n                <li className=\"nav-item\">\n                  <Link\n                    className={\n                      tab === \"workers\" ? \"nav-link active\" : \"nav-link\"\n                    }\n                    onClick={() => this.setState({ tab: \"/workers\" })}\n                    to=\"/workers\"\n                  >\n                    <i className=\"fe fe-users\"></i> Workers\n                  </Link>\n                </li>\n              )}\n\n              {isAdmin ? (\n                <li className=\"nav-item\">\n                  <Link\n                    className={\n                      tab === \"website\" ? \"nav-link active\" : \"nav-link\"\n                    }\n                    onClick={() => this.setState({ tab: \"/website\" })}\n                    to=\"/website\"\n                  >\n                    <i className=\"fe fe-globe\"></i> Website\n                  </Link>\n                </li>\n              ) : (\n                \"\"\n              )}\n\n              {isAdmin ? (\n                <li className=\"nav-item\">\n                  <Link\n                    className={\n                      tab === \"settings\" ? \"nav-link active\" : \"nav-link\"\n                    }\n                    onClick={() => this.setState({ tab: \"/settings\" })}\n                    to=\"/settings\"\n                  >\n                    <i className=\"fe fe-settings\"></i> Settings\n                  </Link>\n                </li>\n              ) : (\n                \"\"\n              )}\n\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"#\" onClick={this.logout}>\n                  <i className=\"fe fe-log-out\"></i> Logout\n                </Link>\n              </li>\n            </ul>\n\n            <div className=\"mt-auto\"></div>\n\n            <div className=\"navbar-user d-none d-md-flex\" id=\"sidebarUser\">\n              <div className=\"dropup\">\n                <Link\n                  to=\"#\"\n                  id=\"sidebarIconCopy\"\n                  className=\"dropdown-toggle\"\n                  role=\"button\"\n                  data-bs-toggle=\"dropdown\"\n                  aria-haspopup=\"true\"\n                  aria-expanded=\"false\"\n                >\n                  <div className=\"avatar avatar-sm avatar-online\">\n                    <img\n                      src=\"https://cdn.icon-icons.com/icons2/1378/PNG/512/avatardefault_92824.png\"\n                      className=\"avatar-img rounded-circle\"\n                      alt=\"...\"\n                    />\n                  </div>\n                </Link>\n\n                <div\n                  className=\"dropdown-menu\"\n                  aria-labelledby=\"sidebarIconCopy\"\n                >\n                  {isAdmin ? (\n                    <Link to=\"/settings\" className=\"dropdown-item\">\n                      Settings\n                    </Link>\n                  ) : (\n                    \"\"\n                  )}\n                  {isAdmin ? <hr className=\"dropdown-divider\" /> : \"\"}\n                  <Link to=\"#\" onClick={this.logout} className=\"dropdown-item\">\n                    Logout\n                  </Link>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n","import React, { PureComponent } from \"react\";\nexport default class Header extends PureComponent {\n  state = {\n    mode: localStorage.getItem(\"themeMode\"),\n  };\n\n  componentDidMount = () => {\n    this.setMode(this.state.mode);\n  };\n\n  setMode = (mode) => {\n    localStorage.setItem(\"themeMode\", mode);\n    if (mode === \"light\")\n      document\n        .getElementById(\"theme\")\n        .setAttribute(\"href\", \"/assets/css/theme.bundle.css\");\n    else\n      document\n        .getElementById(\"theme\")\n        .setAttribute(\"href\", \"/assets/css/theme-dark.bundle.css\");\n    this.setState({\n      mode,\n    });\n  };\n\n  render() {\n    const { mode } = this.state;\n    return (\n      <div className=\"header\">\n        <div className=\"container-fluid\">\n          <div className=\"header-body\">\n            <div className=\"row align-items-end\">\n              <div className=\"col\">\n                <h6 className=\"header-pretitle\">{this.props.pretitle}</h6>\n                <h1 className=\"header-title\">{this.props.title}</h1>\n              </div>\n              <div className=\"col-auto\">\n                <div className=\"btn-group-toggle\">\n                  {mode === \"dark\" ? (\n                    <label\n                      className=\"btn btn-sm btn-white col\"\n                      onClick={() => this.setMode(\"light\")}\n                    >\n                      <i className=\"fe fe-sun mr-2\"></i> Light Mode\n                    </label>\n                  ) : (\n                    <label\n                      className=\"btn btn-sm btn-dark col\"\n                      onClick={() => {\n                        this.setMode(\"dark\");\n                        window.location.reload();\n                      }}\n                    >\n                      <i className=\"fe fe-moon mr-2\"></i> Dark Mode\n                    </label>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default function Modal(props) {\n  return (\n    <div className=\"modal fade\" id={props.id} style={props.style}>\n      <div className={props.className + \" modal-dialog modal-dialog-centered\"}>\n        <div className=\"modal-content shadow-sm\">\n          <div className=\"modal-header p-4 border-0\">\n            <h3 className=\"pb-0 mb-0\">{props.title}</h3>\n            <span\n              type=\"button\"\n              className=\"close text-danger\"\n              data-bs-dismiss=\"modal\"\n              aria-label=\"Close\"\n              id={\"close\" + props.id}\n            >\n              <span aria-hidden=\"true\">&times;</span>\n            </span>\n          </div>\n          {props.children}\n        </div>\n      </div>\n    </div>\n  );\n}\n","export default function TopCard(props) {\n  return (\n    <div className={\"col-12 col-lg-\" + props.col || \"6\"}>\n      {/*\"col-xl\"*/}\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <div className=\"row align-items-center\">\n            <div className=\"col\">\n              <h6 className=\"text-uppercase text-muted mb-2\">{props.title}</h6>\n              <span className=\"h2 mb-0\">{props.value}</span>\n            </div>\n            <div className=\"col-auto\">\n              <span className={\"h2 text-muted mb-0 fe \" + props.icon}></span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { Fragment, PureComponent } from \"react\";\nimport Header from \"../components/Header\";\nimport axios from \"axios\";\nimport { server, config } from \"../env\";\nimport Loader from \"../components/Loader\";\nimport Alert from \"../components/Alert\";\nimport Modal from \"../components/Modal\";\nimport { Link } from \"react-router-dom\";\nimport TopCard from \"../components/TopCard\";\n\nexport default class Barcodes extends PureComponent {\n  state = {\n    barcodes: [],\n    duplicateBarcodes: [],\n    page: 1,\n    totalPages: 1,\n    loader: \"\",\n    stats: {},\n\n    uploadLoader: \"\",\n    uploadMessage: \"\",\n\n    selectedBarcodes: [],\n    type: \"\",\n    query: \"\",\n    queryLoader: \"\",\n\n    total: 0,\n    uploaded: 0,\n\n    average: {\n      priority: 0,\n      express: 0,\n      firstclass: 0,\n      signature: 0,\n    },\n\n    uploadConfirmations: 0,\n    confirmationMessage: \"\",\n  };\n\n  componentDidMount = () => {\n    this.readBarcodes();\n    this.readAverage();\n  };\n\n  readBarcodes = async (page = 1, query = this.state.query) => {\n    this.setState({\n      page,\n      loader: <Loader />,\n    });\n    await axios\n      .get(server + \"/api/admin/read-barcodes?page=\" + page + query, config)\n      .then((res) => {\n        this.setState({\n          barcodes: res.data.payload.barcodes,\n          totalPages: Math.ceil(res.data.payload.totalBarcodes / 20),\n          stats: res.data.payload.stats,\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  readAverage = async () => {\n    await axios\n      .get(server + \"/api/admin/read-average\", config)\n      .then((res) => {\n        this.setState({\n          average: res.data.payload,\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  upload = async (e) => {\n    e.preventDefault();\n\n    var barcodes = e.target.barcodes.value\n      .split(\"\\n\")\n      .filter((b) => b !== \"\" && b !== \" \");\n\n    this.setState({\n      uploadLoader: <Loader />,\n      total: barcodes.length,\n      uploaded: 0,\n    });\n\n    await axios\n      .post(\n        server + \"/api/admin/upload-barcodes\",\n        {\n          type: e.target.type.value,\n          barcodes: barcodes,\n        },\n        config\n      )\n      .then((rsp) => {\n        this.setState({\n          duplicateBarcodes: rsp.data.payload,\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    this.setState({\n      uploaded: this.state.uploaded + 1,\n      uploadConfirmations: 0,\n    });\n\n    this.readBarcodes(1);\n\n    this.setState({\n      uploadLoader: \"\",\n      uploadMessage: (\n        <Alert message=\"Barcodes added successfully.\" className=\"success\" />\n      ),\n    });\n  };\n\n  selectBarcodes = (e) => {\n    const selectedBarcodes = [...this.state.selectedBarcodes];\n    if (e.target.checked) {\n      selectedBarcodes.push(parseInt(e.target.value));\n    } else {\n      selectedBarcodes.splice(selectedBarcodes.indexOf(e.target.value), 1);\n    }\n    this.setState({ selectedBarcodes });\n  };\n\n  deleteBarcodes = async () => {\n    const { selectedBarcodes } = this.state;\n    if (selectedBarcodes.length > 0) {\n      this.setState({\n        loader: <Loader />,\n      });\n      await axios\n        .post(\n          server + \"/api/admin/delete-barcodes\",\n          {\n            barcodeIds: selectedBarcodes,\n          },\n          config\n        )\n        .then((res) => {\n          this.readBarcodes(1);\n          this.setState({\n            loader: \"\",\n            selectedBarcodes: [],\n          });\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } else {\n      this.deleteAllBarcodes(this.state.type);\n    }\n  };\n\n  deleteAllBarcodes = async (type) => {\n    this.setState({\n      loader: <Loader />,\n    });\n    await axios\n      .post(server + \"/api/admin/delete-all-barcodes/\" + type, {}, config)\n      .then((res) => {\n        this.readBarcodes(1);\n        this.setState({\n          loader: \"\",\n          selectedBarcodes: [],\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  search = async (e) => {\n    e.preventDefault();\n\n    this.setState({\n      queryLoader: <Loader />,\n    });\n\n    var query = \"&\";\n\n    if (e.target.search.value) {\n      query += \"search=\" + e.target.search.value;\n    }\n    if (e.target.type.value) {\n      query += \"&type=\" + e.target.type.value;\n    }\n    if (e.target.status.value) {\n      query += \"&status=\" + e.target.status.value;\n    }\n\n    await this.readBarcodes(1, query);\n\n    this.setState({\n      query,\n      queryLoader: \"\",\n    });\n  };\n\n  setConfirmations = () => {\n    this.setState({\n      uploadConfirmations: this.state.uploadConfirmations + 1,\n      confirmationMessage:\n        2 - this.state.uploadConfirmations > 0 ? (\n          <Alert\n            className=\"warning\"\n            message={`Please check for barcode type selected. Need ${\n              2 - this.state.uploadConfirmations\n            } more confirmation to access upload button.`}\n          />\n        ) : (\n          \"\"\n        ),\n    });\n  };\n\n  render() {\n    const { totalPages, page, barcodes, stats } = this.state;\n    const { uploadLoader, uploadMessage, duplicateBarcodes } = this.state;\n    const { selectedBarcodes } = this.state;\n    const { total, average } = this.state;\n    const { uploadConfirmations, setConfirmations, confirmationMessage } =\n      this.state;\n\n    return (\n      <div className=\"main-content\">\n        <Header pretitle=\"Overview\" title=\"Barcodes\" />\n        <div className=\"container-fluid\">\n          <div className=\"row mb-5\">\n            <TopCard\n              title=\"Priority Left\"\n              value={stats.totalPriorityBarcodes}\n              icon=\"fe-tag\"\n              col={3}\n            />\n            <TopCard\n              title=\"Express Left\"\n              value={stats.totalExpressBarcodes}\n              icon=\"fe-tag\"\n              col={3}\n            />\n            <TopCard\n              title=\"First Class Left\"\n              value={stats.totalFirstClassBarcodes}\n              icon=\"fe-tag\"\n              col={3}\n            />\n            <TopCard\n              title=\"Signature Left\"\n              value={stats.totalSignatureBarcodes}\n              icon=\"fe-tag\"\n              col={3}\n            />\n\n            <TopCard\n              title=\"Priority Average(14 DAYS)\"\n              value={average.priority?.toFixed(2)}\n              icon=\"fe-code\"\n              col={3}\n            />\n            <TopCard\n              title=\"Express Average(14 DAYS)\"\n              value={average.express?.toFixed(2)}\n              icon=\"fe-code\"\n              col={3}\n            />\n            <TopCard\n              title=\"First Class Avg.(14 DAYS)\"\n              value={average.firstclass?.toFixed(2)}\n              icon=\"fe-code\"\n              col={3}\n            />\n            <TopCard\n              title=\"Signature Avg.(14 DAYS)\"\n              value={average.signature?.toFixed(2)}\n              icon=\"fe-code\"\n              col={3}\n            />\n          </div>\n          <div className=\"d-flex justify-content-between mb-3 w-100\">\n            <div>\n              <button\n                className=\"btn btn-primary me-2\"\n                data-bs-toggle=\"modal\"\n                data-bs-target=\"#uploadModal\"\n                onClick={() =>\n                  this.setState({\n                    duplicateBarcodes: [],\n                  })\n                }\n              >\n                Upload Barcodes\n              </button>\n\n              <button\n                className=\"btn btn-danger\"\n                data-bs-toggle=\"modal\"\n                data-bs-target=\"#deleteConfirmationModal\"\n              >\n                Delete Barcodes\n              </button>\n            </div>\n            <div>\n              <form className=\"d-flex\" onSubmit={this.search}>\n                <input\n                  type=\"text\"\n                  name=\"search\"\n                  id=\"search\"\n                  className=\"bg-transparent border border-primary rounded me-2 px-3 text-white\"\n                  placeholder=\"Search code\"\n                />\n\n                <select\n                  name=\"type\"\n                  className=\"bg-transparent border border-primary rounded me-2 px-3\"\n                  style={{\n                    color: \"gray\",\n                  }}\n                >\n                  <option value=\"all\">All Barcodes</option>\n                  <option value=\"priority\">Priority</option>\n                  <option value=\"express\">Express</option>\n                  <option value=\"firstclass\">First Class</option>\n                  <option value=\"signature\">Signature</option>\n                </select>\n\n                <select\n                  name=\"status\"\n                  className=\"bg-transparent border border-primary rounded me-2 px-3\"\n                  style={{\n                    color: \"gray\",\n                  }}\n                >\n                  <option value=\"\">Good and Bad Status</option>\n                  <option value=\"good\">Good</option>\n                  <option value=\"bad\">Bad</option>\n                </select>\n\n                <button type=\"submit\" className=\"btn btn-primary\">\n                  Search\n                </button>\n              </form>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"card\">\n                <div className=\"table-responsive\">\n                  <table className=\"table table-sm table-nowrap card-table\">\n                    <thead>\n                      <tr>\n                        <th>Select</th>\n                        {/* <th>\n                          <Link to=\"#\" className=\"text-muted\">\n                            ID\n                          </Link>\n                        </th>\n                        <th>\n                          <Link to=\"#\" className=\"text-muted\">\n                            Username\n                          </Link>\n                        </th>\n                        <th>\n                          <Link to=\"#\" className=\"text-muted\">\n                            Email\n                          </Link>\n                        </th> */}\n                        <th>\n                          <Link to=\"#\" className=\"text-muted\">\n                            Code\n                          </Link>\n                        </th>\n                        <th>\n                          <Link to=\"#\" className=\"text-muted\">\n                            Type\n                          </Link>\n                        </th>\n                        <th>\n                          <Link to=\"#\" className=\"text-muted\">\n                            Status\n                          </Link>\n                        </th>\n                        <th>\n                          <Link to=\"#\" className=\"text-muted\">\n                            Date\n                          </Link>\n                        </th>\n                        <th>\n                          <Link to=\"#\" className=\"text-muted\">\n                            Action\n                          </Link>\n                        </th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"list\">\n                      {barcodes.map((barcode, index) => (\n                        <tr key={barcode.id}>\n                          <td>\n                            <input\n                              className=\"form-check-input\"\n                              type=\"checkbox\"\n                              value={barcode.id}\n                              onChange={this.selectBarcodes}\n                            />\n                          </td>\n                          {/* <td>{barcode.id}</td>\n                          <td>{barcode.adminName}</td>\n                          <td>{barcode.adminEmail}</td> */}\n                          <td>{barcode.ocrCode}</td>\n                          <td>{barcode.type.toUpperCase()}</td>\n                          <td>\n                            {barcode.status === \"bad\" ? (\n                              <span className=\"badge bg-danger\">BAD</span>\n                            ) : (\n                              <span className=\"badge bg-success\">GOOD</span>\n                            )}\n                          </td>\n                          <td>{new Date(barcode.createdAt).toDateString()}</td>\n                          <td>\n                            <button\n                              className=\"btn btn-danger btn-sm\"\n                              onClick={() => {\n                                this.setState(\n                                  {\n                                    selectedBarcodes: [barcode.id],\n                                  },\n                                  () => {\n                                    this.deleteBarcodes();\n                                  }\n                                );\n                              }}\n                            >\n                              Delete\n                            </button>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n              <nav aria-label=\"Page navigation example\">\n                <ul className=\"pagination justify-content-center\">\n                  {page > 1 ? (\n                    <li\n                      className=\"page-item\"\n                      onClick={() => this.readBarcodes(page - 1)}\n                    >\n                      <Link to=\"#\" className=\"page-link\">\n                        Previous\n                      </Link>\n                    </li>\n                  ) : (\n                    \"\"\n                  )}\n                  <li className=\"page-item\">\n                    <Link to=\"#\" className=\"page-link\" href=\"#\">\n                      {page}\n                    </Link>\n                  </li>\n                  {page < totalPages ? (\n                    <li\n                      className=\"page-item\"\n                      onClick={() => this.readBarcodes(page + 1)}\n                    >\n                      <Link to=\"#\" className=\"page-link\" href=\"#\">\n                        Next\n                      </Link>\n                    </li>\n                  ) : (\n                    \"\"\n                  )}\n                </ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n\n        {/* upload modal */}\n        <Modal id=\"uploadModal\" title=\"Upload Barcodes\">\n          <div className=\"modal-body\">\n            <form onSubmit={this.upload}>\n              {uploadMessage}\n\n              {uploadMessage && duplicateBarcodes.length > 0 && (\n                <div className=\"form-group\">\n                  {/* duplicateBarcodes */}\n                  <div className=\"alert alert-danger\">\n                    <strong>\n                      {duplicateBarcodes.length} Duplicate/Bad Barcodes\n                    </strong>\n                    <ul>\n                      {duplicateBarcodes.map((barcode, index) => (\n                        <li key={index}>\n                          {barcode.barcode} -{\" \"}\n                          {new Date(barcode.lastDate).toDateString()}\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                </div>\n              )}\n\n              <div className=\"form-group\">\n                <label htmlFor=\"barcodes\">Barcodes Type</label>\n                <select name=\"type\" id=\"type\" className=\"form-control\">\n                  <option value=\"priority\">Priority</option>\n                  <option value=\"express\">Express</option>\n                  <option value=\"firstclass\">First Class</option>\n                  <option value=\"signature\">Signature</option>\n                </select>\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"barcodes\">Barcodes</label>\n                <textarea\n                  name=\"barcodes\"\n                  id=\"\"\n                  cols=\"30\"\n                  rows=\"10\"\n                  className=\"form-control\"\n                ></textarea>\n              </div>\n              <div className=\"form-group\">\n                {confirmationMessage}\n                <button\n                  type={uploadConfirmations > 2 ? \"submit\" : \"button\"}\n                  className={\n                    uploadConfirmations === 2\n                      ? \"btn btn-primary\"\n                      : \"btn btn-warning\"\n                  }\n                  onClick={this.setConfirmations}\n                >\n                  <i className=\"fa fa-upload\"></i>{\" \"}\n                  {uploadConfirmations === 2 ? \"Upload\" : \"Confirm\"} ({total})\n                  {uploadLoader}\n                </button>\n              </div>\n            </form>\n          </div>\n        </Modal>\n\n        {/* delete modal */}\n        <Modal id=\"deleteConfirmationModal\" title=\"Delete Barcodes\">\n          <div className=\"modal-body  text-center\">\n            <h3>Are you sure you want to delete?</h3>\n\n            {selectedBarcodes.length === 0 && (\n              <div className=\"form-group mb-3\">\n                <label htmlFor=\"\">Choose Barcode Type</label>\n                <select\n                  name=\"type\"\n                  id=\"type\"\n                  className=\"form-control\"\n                  onChange={(e) =>\n                    this.setState({\n                      selectedBarcodes: [],\n                      type: e.target.value,\n                    })\n                  }\n                >\n                  <option value=\"\">Select Type</option>\n                  <option value=\"priority\">Priority</option>\n                  <option value=\"express\">Express</option>\n                  <option value=\"firstclass\">First Class</option>\n                  <option value=\"signature\">Signature</option>\n                </select>\n              </div>\n            )}\n\n            <div className=\"form-group mt-4\">\n              <button className=\"btn btn-primary m-2\" data-bs-dismiss=\"modal\">\n                Go back\n              </button>\n              <button\n                className=\"btn btn-danger\"\n                onClick={this.deleteBarcodes}\n                data-bs-dismiss=\"modal\"\n              >\n                Continue\n              </button>\n            </div>\n          </div>\n        </Modal>\n      </div>\n    );\n  }\n}\n","import { server, config } from \"../env\";\nimport axios from \"axios\";\n\nexport default class ApiRequests {\n  async getTickets(page, search = \"\") {\n    var data = [];\n    var error = false;\n\n    await axios\n      .post(\n        server + \"/api/ticket/read\",\n        {\n          page,\n          search,\n        },\n        config\n      )\n      .then((res) => {\n        data = res.data.payload;\n      })\n      .catch((err) => {\n        error = true;\n      });\n\n    return { data, error };\n  }\n\n  async getTicket(id) {\n    var data = {};\n    var error = false;\n\n    await axios\n      .get(server + \"/api/ticket/read/\" + id, config)\n      .then((res) => {\n        data = res.data.payload;\n      })\n      .catch((err) => {\n        error = true;\n      });\n\n    return { data, error };\n  }\n\n  async createTicket(data) {\n    var error = false;\n\n    await axios\n      .post(server + \"/api/ticket/create\", data, config)\n      .then((res) => {})\n      .catch((err) => {\n        error = true;\n      });\n\n    return error;\n  }\n\n  async sendTicketMessage(data) {\n    var error = false;\n\n    await axios\n      .post(server + \"/api/ticket/reply\", data, config)\n      .then((res) => {})\n      .catch((err) => {\n        error = true;\n      });\n\n    return error;\n  }\n\n  async setTicketStatus(data) {\n    var error = false;\n\n    var path = data.status === \"open\" ? \"/open/\" : \"/close/\";\n\n    await axios\n      .post(server + \"/api/ticket/\" + path + data.id, data, config)\n      .then((res) => {})\n      .catch((err) => {\n        error = true;\n      });\n\n    return error;\n  }\n\n  async getPricing(id = null) {\n    var data = [];\n    var error = false;\n\n    var path = !id ? \"/api/pricing/read\" : \"/api/pricing/read/\" + id;\n\n    await axios\n      .get(server + path, config)\n      .then((res) => {\n        data = res.data.payload || [];\n      })\n      .catch((err) => {\n        error = true;\n      });\n\n    return { data, error };\n  }\n\n  async createPricing(data) {\n    var error = false;\n\n    await axios\n      .post(server + \"/api/pricing/create\", data, config)\n      .then((res) => {})\n      .catch((err) => {\n        error = true;\n      });\n\n    return error;\n  }\n\n  async updatePricing(data) {\n    var error = false;\n\n    await axios\n      .put(server + \"/api/pricing/update\", data, config)\n      .then((res) => {})\n      .catch((err) => {\n        error = true;\n      });\n\n    return error;\n  }\n\n  async deletePricing(id) {\n    var error = false;\n\n    await axios\n      .delete(server + \"/api/pricing/delete/\" + id, config)\n      .then((res) => {})\n      .catch((err) => {\n        error = true;\n      });\n\n    return error;\n  }\n\n  async createUserPricing(data) {\n    var error = false;\n\n    await axios\n      .post(server + \"/api/pricing/user/create\", data, config)\n      .then((res) => {})\n      .catch((err) => {\n        error = true;\n      });\n\n    return error;\n  }\n\n  async updateUserPricing(data) {\n    var error = false;\n\n    await axios\n      .put(server + \"/api/pricing/user/update\", data, config)\n      .then((res) => {})\n      .catch((err) => {\n        error = true;\n      });\n\n    return error;\n  }\n\n  async deleteUserPricing(id) {\n    var error = false;\n\n    await axios\n      .delete(server + \"/api/pricing/user/delete/\" + id, config)\n      .then((res) => {})\n      .catch((err) => {\n        error = true;\n      });\n\n    return error;\n  }\n\n  async readUsersSpending() {\n    var data = [];\n    var error = false;\n\n    await axios\n      .get(server + \"/api/admin/user/readUsersSpending\", config)\n      .then((res) => {\n        data = res.data.payload || [];\n      })\n      .catch((err) => {\n        error = true;\n      });\n\n    return { data, error };\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport Header from \"../components/Header\";\nimport { Link } from \"react-router-dom\";\nimport TopCard from \"../components/TopCard\";\nimport axios from \"axios\";\nimport { server, config } from \"../env\";\nimport { LineChart } from \"../tools/helper\";\nimport ApiRequests from \"../tools/ApiRequests\";\n\nconst apiRequests = new ApiRequests();\n\nexport default class Dashboard extends PureComponent {\n  state = {\n    stats: {\n      barcodes: 0,\n      labels: 0,\n    },\n    chart: [],\n    users: [],\n  };\n\n  componentDidMount = async () => {\n    this.readUsersSpending();\n    await axios(server + \"/api/admin/access\", config)\n      .then((rsp) => {\n        if (!rsp.data.payload.superAccess) {\n          this.props.history.push(\"/barcodes\");\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    this.readStats();\n  };\n\n  readStats = async (filter = \"t\") => {\n    const e = document.getElementById(\"labels\");\n    var canvas = document.createElement(\"CANVAS\");\n    while (e.firstChild) {\n      e.removeChild(e.firstChild);\n    }\n    e.appendChild(canvas);\n    canvas.classList.add(\"chart-canvas\");\n    await axios(server + \"/api/admin/dashboard?filter=\" + filter, config).then(\n      (rsp) => {\n        this.setState({\n          stats: rsp.data.payload.stats,\n          chart: rsp.data.payload.chart,\n        });\n        const data = {\n          labels: rsp.data.payload.chart.map((e) => e.label).reverse(),\n          datasets: [\n            {\n              label: \"Earned\",\n              data: rsp.data.payload.chart.map((e) => e.count).reverse(),\n            },\n          ],\n        };\n        LineChart(canvas, data);\n      }\n    );\n  };\n\n  readUsersSpending = async () => {\n    const { data } = await apiRequests.readUsersSpending();\n    this.setState({\n      users: data,\n    });\n  };\n\n  render() {\n    const { stats, users } = this.state;\n    return (\n      <div className=\"main-content\">\n        <Header pretitle=\"Overview\" title=\"Dashboard\" />\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <TopCard\n              title=\"Total Labels\"\n              value={stats.labels}\n              icon=\"fe-tag\"\n              col={6}\n            />\n            <TopCard\n              title=\"Available Barcodes\"\n              value={stats.barcodes}\n              icon=\"fe-code\"\n              col={6}\n            />\n          </div>\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"card\">\n                <div className=\"card-header\">\n                  <h4 className=\"card-header-title\">Labels generated</h4>\n                  <ul className=\"nav nav-tabs nav-tabs-sm card-header-tabs\">\n                    <li className=\"nav-item\">\n                      <Link\n                        href=\"#\"\n                        className=\"nav-link active\"\n                        data-bs-toggle=\"tab\"\n                        onClick={() => this.readStats(\"t\")}\n                      >\n                        Today\n                      </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                      <Link\n                        href=\"#\"\n                        className=\"nav-link\"\n                        data-bs-toggle=\"tab\"\n                        onClick={() => this.readStats(\"w\")}\n                      >\n                        Week\n                      </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                      <Link\n                        href=\"#\"\n                        className=\"nav-link\"\n                        data-bs-toggle=\"tab\"\n                        onClick={() => this.readStats(\"m\")}\n                      >\n                        Month\n                      </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                      <Link\n                        href=\"#\"\n                        className=\"nav-link\"\n                        data-bs-toggle=\"tab\"\n                        onClick={() => this.readStats(\"y\")}\n                      >\n                        Year\n                      </Link>\n                    </li>\n                  </ul>\n                </div>\n                <div className=\"card-body\">\n                  <div className=\"chart\" id=\"labels\"></div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"card\">\n            <div className=\"card-header\">\n              <h4 className=\"card-header-title\">Users Leaderboard</h4>\n            </div>\n            <div className=\"card-body\">\n              <div className=\"table-responsive\">\n                <table className=\"table table-sm table-nowrap card-table\">\n                  <thead>\n                    <tr>\n                      <th>\n                        <Link to=\"#\" className=\"text-muted\">\n                          USER ID\n                        </Link>\n                      </th>\n                      <th>\n                        <Link to=\"#\" className=\"text-muted\">\n                          USERNAME\n                        </Link>\n                      </th>\n                      <th>\n                        <Link to=\"#\" className=\"text-muted\">\n                          EMAIL\n                        </Link>\n                      </th>\n                      <th>\n                        <Link to=\"#\" className=\"text-muted\">\n                          BALANCE\n                        </Link>\n                      </th>\n                      <th>\n                        <Link to=\"#\" className=\"text-muted\">\n                          Spending\n                        </Link>\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"list\">\n                    {users.map((user) => (\n                      <tr key={user.id}>\n                        <td>{user.id}</td>\n                        <td>{user.username}</td>\n                        <td>{user.email}</td>\n                        <td>${user.balance?.toFixed(2)}</td>\n                        <td>${user.spent?.toFixed(2)}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport Header from \"../components/Header\";\nimport axios from \"axios\";\nimport { server, config } from \"../env\";\nimport Loader from \"../components/Loader\";\nimport Alert from \"../components/Alert\";\nimport Modal from \"../components/Modal\";\nimport { Link } from \"react-router-dom\";\n\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport default class Labels extends PureComponent {\n  state = {\n    labels: [],\n    page: 1,\n    search: \"\",\n    totalPages: 1,\n    loader: \"\",\n    label: {},\n    message: \"\",\n    recycleLoader: \"\",\n\n    date: new Date(),\n    type: \"priority\",\n\n    fromStreetNumber: \"\",\n    fromStreetNumber2: \"\",\n    fromZip: \"\",\n    fromCity: \"\",\n    fromState: \"\",\n    fromCountry: \"\",\n\n    toStreetNumber: \"\",\n    toStreetNumber2: \"\",\n    toZip: \"\",\n    toCity: \"\",\n    toState: \"\",\n    toCountry: \"\",\n\n    isFromAddressVerified: false,\n    isToAddressVerified: false,\n  };\n\n  componentDidMount = () => {\n    this.readLabels();\n  };\n\n  readLabels = async (page = this.state.page, search = this.state.search) => {\n    this.setState({\n      page,\n      loader: <Loader />,\n    });\n    var localConfig = { ...config };\n    localConfig.cancelToken = this.state.cancelToken?.token;\n    await axios\n      .get(\n        server + \"/api/label/read?page=\" + page + \"&search=\" + search,\n        localConfig\n      )\n      .then((res) => {\n        this.setState({\n          labels: res.data.payload.labels,\n          totalPages: Math.ceil(res.data.payload.totalLabels / 20),\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  generateLabel = async (e) => {\n    e.preventDefault();\n    this.setState({\n      loader: <Loader />,\n    });\n\n    const form = new FormData(e.target);\n    const data = {};\n    form.forEach((value, key) => {\n      data[key] = value;\n    });\n    data.date = this.state.date;\n\n    // format date in MM-DD-YYYY format\n    const date = new Date(data.date);\n    const day = date.getDate();\n    const month = date.getMonth() + 1;\n    const year = date.getFullYear();\n\n    data.date = month + \"-\" + day + \"-\" + year;\n\n    await axios\n      .post(server + \"/api/label/generate\", data, {\n        headers: {\n          \"x-api-key\": \"SsWP5wpTMk4cBfMhjKEAjLXKjgRCbBN2\",\n        },\n      })\n      .then((res) => {\n        this.setState({\n          message: <Alert className=\"success\" message={res.data.message} />,\n        });\n        this.readLabels();\n      })\n      .catch((err) => {\n        this.setState({\n          message: (\n            <Alert className=\"danger\" message={err.response?.data?.message} />\n          ),\n        });\n      });\n\n    this.setState({\n      loader: \"\",\n    });\n  };\n\n  onChange = (e) => {\n    const { name, value } = e.target;\n    if (name === \"toZip\" || name === \"fromZip\") {\n      var code = \"\";\n      if (value.includes(\"-\") && value.length > 5) {\n        code = value;\n      } else if (value.includes(\"-\") && value.length <= 5) {\n        code = value.replaceAll(\"-\", \"\");\n      } else if (!value.includes(\"-\") && value.length > 5) {\n        code = value.substring(0, 5) + \"-\" + value.substring(5, value.length);\n      } else if (!value.includes(\"-\") && value.length < 5) {\n        code = value;\n      } else {\n        code = value;\n      }\n\n      this.setState({\n        [name]: code,\n      });\n    } else {\n      this.setState({\n        [e.target.name]: e.target.value,\n      });\n    }\n  };\n\n  verifyAddress = async (street1, street2, city, state, zip, type = \"from\") => {\n    const obj = {};\n    if (street1) obj.street1 = street1;\n    if (street2) obj.street2 = street2;\n    if (city) obj.city = city;\n    if (state) obj.state = state;\n    if (zip) obj.zip = zip;\n\n    if (type === \"from\") {\n      this.setState({\n        isFromAddressVerified: false,\n      });\n    }\n\n    this.setState({\n      message: <Alert className=\"info\" message=\"Processing...\" />,\n    });\n\n    await axios\n      .post(\n        server + \"/api/usps/address\",\n        {\n          ...obj,\n        },\n        config\n      )\n      .then((res) => {\n        if (res.data.payload) {\n          if (type === \"from\") {\n            this.setState({\n              isFromAddressVerified: true,\n            });\n          } else {\n            this.setState({\n              isToAddressVerified: true,\n            });\n          }\n        } else {\n          if (type === \"from\") {\n            this.setState({\n              isFromAddressVerified: false,\n            });\n          } else {\n            this.setState({\n              isToAddressVerified: false,\n            });\n          }\n        }\n      })\n      .catch((err) => {});\n    this.setState({\n      message: \"\",\n    });\n  };\n\n  zipCodeLookup = async (city, state, street1, street2, type = \"from\") => {\n    console.log(city, state, street1, street2);\n    if (!city) return;\n    if (!state) return;\n    if (!street1) return;\n\n    const obj = {};\n    if (street1) obj.street1 = street1;\n    if (street2) obj.street2 = street2;\n    if (city) obj.city = city;\n    if (state) obj.state = state;\n\n    this.setState({\n      message: <Alert className=\"info\" message=\"Processing...\" />,\n    });\n\n    var result = {};\n    await axios\n      .post(\n        server + \"/api/usps/zipcode\",\n        {\n          ...obj,\n        },\n        config\n      )\n      .then((res) => {\n        if (res.data.payload) {\n          result = res.data.payload;\n          this.setState({\n            message: \"\",\n          });\n        } else {\n          this.setState({\n            message: <Alert className=\"danger\" message=\"Invalid Address\" />,\n          });\n        }\n      })\n      .catch((err) => {\n        this.setState({\n          message: <Alert className=\"danger\" message=\"Invalid Address\" />,\n        });\n      });\n\n    const zip = result.zip;\n\n    console.log(zip);\n\n    if (type === \"from\" && result) {\n      this.setState({\n        fromZip: zip?.endsWith(\"-\") ? zip?.slice(0, 5) : zip,\n      });\n    }\n    if (type === \"to\" && result) {\n      this.setState({\n        toZip: zip?.endsWith(\"-\") ? zip?.slice(0, 5) : zip,\n      });\n    }\n  };\n\n  cityStateLookup = async (zip, type = \"form\") => {\n    if (zip.length !== 5) return;\n\n    var result;\n    const obj = {\n      zip: zip.replaceAll(\"-\", \"\"),\n    };\n\n    await axios\n      .post(\n        server + \"/api/usps/city-state\",\n        {\n          ...obj,\n        },\n        config\n      )\n      .then((res) => {\n        if (res.data.payload) {\n          result = res.data.payload;\n          console.log(res.data.payload);\n        }\n      })\n      .catch((err) => {});\n\n    if (type === \"from\") {\n      this.setState({\n        fromCity: result.city,\n        fromState: result.state,\n      });\n    }\n    if (type === \"to\") {\n      this.setState({\n        toCity: result.city,\n        toState: result.state,\n      });\n    }\n  };\n\n  recycleLabel = async () => {\n    this.setState({\n      recycleLoader: <Loader />,\n    });\n\n    await axios\n      .post(\n        server + \"/api/admin/recycle-label\",\n        {\n          id: this.state.label.id,\n        },\n        config\n      )\n      .then((res) => {\n        this.readLabels();\n        var modalCloseButton = document.getElementById(\"closeRecycleModal\");\n        if (modalCloseButton) modalCloseButton.click();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    this.setState({\n      recycleLoader: \"\",\n    });\n  };\n\n  render() {\n    const { totalPages, page, date, labels, label } = this.state;\n    const { loader, message } = this.state;\n\n    const {\n      type,\n      fromStreetNumber,\n      fromStreetNumber2,\n      fromZip,\n      fromCity,\n      fromState,\n      fromCountry,\n\n      toStreetNumber,\n      toStreetNumber2,\n      toZip,\n      toCity,\n      toState,\n      toCountry,\n    } = this.state;\n\n    const { isFromAddressVerified, isToAddressVerified } = this.state;\n    const { recycleLoader } = this.state;\n\n    return (\n      <div className=\"main-content\">\n        <Header pretitle=\"Overview\" title=\"Labels\" />\n        <div className=\"container-fluid\">\n          {/* <div className=\"d-flex justify-content-between mb-3 w-100\">\n            <button\n              className=\"btn btn-primary\"\n              data-bs-toggle=\"modal\"\n              data-bs-target=\"#generateLabel\"\n            >\n              Generate Label\n            </button>\n          </div> */}\n\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"card\">\n                <div className=\"card-header\">\n                  <h4 className=\"card-title\">All Labels</h4>\n                  <input\n                    type=\"text\"\n                    name=\"search\"\n                    id=\"search\"\n                    className=\"form-control w-25\"\n                    placeholder=\"Search...\"\n                    onChange={(e) => {\n                      this.setState({ search: e.target.value });\n                      this.readLabels(1, e.target.value);\n                    }}\n                  />\n                </div>\n                <div className=\"table-responsive\">\n                  <table className=\"table table-sm table-nowrap card-table\">\n                    <thead>\n                      <tr>\n                        <th>\n                          <Link to=\"#\" className=\"text-muted\">\n                            ID\n                          </Link>\n                        </th>\n                        <th>\n                          <Link to=\"#\" className=\"text-muted\">\n                            USER\n                          </Link>\n                        </th>\n                        <th>\n                          <Link to=\"#\" className=\"text-muted\">\n                            Type\n                          </Link>\n                        </th>\n                        <th>\n                          <Link to=\"#\" className=\"text-muted\">\n                            Weight\n                          </Link>\n                        </th>\n                        <th>\n                          <Link to=\"#\" className=\"text-muted\">\n                            From Name\n                          </Link>\n                        </th>\n                        <th>\n                          <Link to=\"#\" className=\"text-muted\">\n                            TRACKING CODE\n                          </Link>\n                        </th>\n                        <th>\n                          <Link to=\"#\" className=\"text-muted\">\n                            Date\n                          </Link>\n                        </th>\n                        <th>\n                          <Link to=\"#\" className=\"text-muted\">\n                            Status\n                          </Link>\n                        </th>\n                        {/* <th>\n                          <Link to=\"#\" className=\"text-muted\">\n                            Summery\n                          </Link>\n                        </th> */}\n                        <th>\n                          <Link to=\"#\" className=\"text-muted\">\n                            Action\n                          </Link>\n                        </th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"list\">\n                      {labels.map((label, index) => (\n                        <tr key={label.id}>\n                          <td>{label.id}</td>\n                          <td>{label.user.toUpperCase()}</td>\n                          <td>{label.type}</td>\n                          <td>{label.weight} lb</td>\n                          <td>{label.fromName} lb</td>\n                          <td>{label.barcodeOCR}</td>\n                          <td>{new Date(label.createdAt).toDateString()}</td>\n                          <td>\n                            {label.status === \"delivered\" ? (\n                              <span className=\"badge bg-success\">\n                                Delivered\n                              </span>\n                            ) : label.status === \"awaiting\" ? (\n                              <span className=\"badge bg-warning\">\n                                Awaiting scan\n                              </span>\n                            ) : (\n                              <span className=\"badge bg-info\">In Progress</span>\n                            )}\n                          </td>\n                          {/* <td>\n                            {JSON.parse(label.statusMessage).length > 0 &&\n                              JSON.parse(label.statusMessage)[0]}\n                          </td> */}\n\n                          <td>\n                            <button\n                              className=\"btn btn-sm btn-primary me-1\"\n                              data-bs-toggle=\"modal\"\n                              data-bs-target=\"#viewLabel\"\n                              onClick={() =>\n                                this.setState({\n                                  label: { ...label },\n                                })\n                              }\n                            >\n                              View\n                            </button>\n                            <a\n                              className=\"btn btn-sm btn-primary me-1\"\n                              href={server + label.pdfPath}\n                              download\n                            >\n                              <i className=\"fe fe-download\"></i>\n                              PDF\n                            </a>\n\n                            {!JSON.parse(label.statusMessage)?.length && (\n                              <button\n                                className=\"btn btn-sm btn-warning\"\n                                onClick={() => {\n                                  this.setState({\n                                    label: { ...label },\n                                  });\n                                }}\n                                data-bs-toggle=\"modal\"\n                                data-bs-target=\"#recycleModal\"\n                              >\n                                Recycle\n                              </button>\n                            )}\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n              <nav aria-label=\"Page navigation example\">\n                <ul className=\"pagination justify-content-center\">\n                  {page > 1 ? (\n                    <li\n                      className=\"page-item\"\n                      onClick={() => this.readLabels(page - 1)}\n                      style={{\n                        cursor: \"pointer\",\n                      }}\n                    >\n                      <Link\n                        to=\"#\"\n                        className=\"page-link\"\n                        onClick={() => this.readLabels(page - 1)}\n                      >\n                        Previous\n                      </Link>\n                    </li>\n                  ) : (\n                    \"\"\n                  )}\n                  <li className=\"page-item\">\n                    <Link to=\"#\" className=\"page-link\" href=\"#\">\n                      {page}\n                    </Link>\n                  </li>\n                  {page < totalPages ? (\n                    <li\n                      className=\"page-item\"\n                      onClick={() => this.readLabels(page + 1)}\n                      style={{\n                        cursor: \"pointer\",\n                      }}\n                    >\n                      <Link\n                        to=\"#\"\n                        className=\"page-link\"\n                        onClick={() => this.readLabels(page + 1)}\n                      >\n                        Next\n                      </Link>\n                    </li>\n                  ) : (\n                    \"\"\n                  )}\n                </ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n\n        <Modal id=\"generateLabel\" title=\"Read Label\" className=\"modal-lg\">\n          <div className=\"modal-body\">\n            <form onSubmit={this.generateLabel}>\n              {!isFromAddressVerified || !isToAddressVerified ? (\n                <Alert\n                  className=\"danger\"\n                  message=\"Addresses are not verified.\"\n                />\n              ) : (\n                <Alert className=\"info\" message=\"Addresses are  verified.\" />\n              )}\n              {message}\n              {/* Top ROw */}\n              <div className=\"row\">\n                <div className=\"col-md-4\">\n                  <div className=\"form-group mb-3\">\n                    <label htmlFor=\"\">Type</label>\n                    <select\n                      name=\"type\"\n                      id=\"type\"\n                      className=\"form-control\"\n                      required\n                      onChange={(e) =>\n                        this.setState({\n                          type: e.target.value,\n                        })\n                      }\n                    >\n                      <option value=\"priority\">Priority</option>\n                      <option value=\"express\">Express</option>\n                      <option value=\"firstclass\">First Class</option>\n                      <option value=\"signature\">Signature</option>\n                    </select>\n                  </div>\n                </div>\n                <div className=\"col-md-4\">\n                  <div className=\"form-group mb-3\">\n                    <label htmlFor=\"\">\n                      Weight ({type === \"firstclass\" ? \"oz\" : \"lb\"})\n                    </label>\n                    <input\n                      type=\"number\"\n                      name=\"weight\"\n                      id=\"weight\"\n                      className=\"form-control\"\n                      required\n                    />\n                  </div>\n                </div>\n                <div className=\"col-md-4\">\n                  <div className=\"form-group mb-3\">\n                    <label htmlFor=\"\">Date</label>\n                    <DatePicker\n                      selected={date}\n                      onChange={(date) => this.setState({ date })}\n                      className=\"form-control\"\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"row\">\n                {/* from name */}\n                <div className=\"col-md-6\">\n                  <div className=\"form-group mb-3\">\n                    <label htmlFor=\"\">From Name</label>\n                    <input\n                      type=\"text\"\n                      name=\"fromName\"\n                      id=\"fromName\"\n                      className=\"form-control\"\n                      required\n                    />\n                  </div>\n                </div>\n\n                {/* fromRefNumber */}\n                <div className=\"col-md-6\">\n                  <div className=\"form-group mb-3\">\n                    <label htmlFor=\"\">From Reference Number</label>\n                    <input\n                      type=\"text\"\n                      name=\"fromRefNumber\"\n                      id=\"fromRefNumber\"\n                      className=\"form-control\"\n                    />\n                  </div>\n                </div>\n\n                {/* fromStreetNumber */}\n                <div className=\"col-md-6\">\n                  <div className=\"form-group mb-3\">\n                    <label htmlFor=\"\">From Street Number</label>\n                    <input\n                      type=\"text\"\n                      name=\"fromStreetNumber\"\n                      id=\"fromStreetNumber\"\n                      className=\"form-control\"\n                      value={fromStreetNumber}\n                      onChange={(e) => {\n                        this.onChange(e);\n                        this.zipCodeLookup(\n                          fromCity,\n                          fromState,\n                          e.target.value,\n                          fromStreetNumber2,\n                          fromZip,\n                          \"from\"\n                        );\n                        this.verifyAddress(\n                          e.target.value,\n                          fromStreetNumber2,\n                          fromCity,\n                          fromState,\n                          \"from\"\n                        );\n                      }}\n                      required\n                    />\n                  </div>\n                </div>\n\n                {/* fromStreetNumber2 */}\n                <div className=\"col-md-6\">\n                  <div className=\"form-group mb-3\">\n                    <label htmlFor=\"\">From Street Number 2</label>\n                    <input\n                      type=\"text\"\n                      name=\"fromStreetNumber2\"\n                      id=\"fromStreetNumber2\"\n                      className=\"form-control\"\n                      value={fromStreetNumber2}\n                      onChange={(e) => {\n                        this.onChange(e);\n                        this.zipCodeLookup(\n                          fromCity,\n                          fromState,\n                          fromStreetNumber,\n                          e.target.value,\n                          fromZip,\n                          \"from\"\n                        );\n                        this.verifyAddress(\n                          fromStreetNumber,\n                          e.target.value,\n                          fromCity,\n                          fromState,\n                          \"from\"\n                        );\n                      }}\n                    />\n                  </div>\n                </div>\n\n                {/* fromCity */}\n                <div className=\"col-md-6\">\n                  <div className=\"form-group mb-3\">\n                    <label htmlFor=\"\">From City</label>\n                    <input\n                      type=\"text\"\n                      name=\"fromCity\"\n                      id=\"fromCity\"\n                      className=\"form-control\"\n                      value={fromCity}\n                      onChange={(e) => {\n                        this.onChange(e);\n                        this.zipCodeLookup(\n                          e.target.value,\n                          fromState,\n                          fromStreetNumber,\n                          fromStreetNumber2,\n                          \"from\"\n                        );\n                        this.verifyAddress(\n                          fromStreetNumber,\n                          fromStreetNumber2,\n                          e.target.value,\n                          fromState,\n                          fromZip,\n                          \"from\"\n                        );\n                      }}\n                      required\n                    />\n                  </div>\n                </div>\n\n                {/* fromState */}\n                <div className=\"col-md-6\">\n                  <div className=\"form-group mb-3\">\n                    <label htmlFor=\"\">From State</label>\n                    <input\n                      type=\"text\"\n                      name=\"fromState\"\n                      id=\"fromState\"\n                      className=\"form-control\"\n                      value={fromState}\n                      onChange={(e) => {\n                        this.onChange(e);\n                        this.zipCodeLookup(\n                          fromCity,\n                          e.target.value,\n                          fromStreetNumber,\n                          fromStreetNumber2,\n                          fromZip,\n                          \"from\"\n                        );\n                        this.verifyAddress(\n                          fromStreetNumber,\n                          fromStreetNumber2,\n                          fromCity,\n                          e.target.value,\n                          \"from\"\n                        );\n                      }}\n                      maxLength={2}\n                      required\n                    />\n                  </div>\n                </div>\n\n                {/* fromZip */}\n                <div className=\"col-md-6\">\n                  <div className=\"form-group mb-3\">\n                    <label htmlFor=\"\">From Zip</label>\n                    <input\n                      type=\"text\"\n                      name=\"fromZip\"\n                      id=\"fromZip\"\n                      value={fromZip}\n                      onChange={(e) => {\n                        this.onChange(e);\n                        this.cityStateLookup(e.target.value, \"from\");\n                        this.verifyAddress(\n                          fromStreetNumber,\n                          fromStreetNumber2,\n                          fromCity,\n                          fromState,\n                          e.target.value,\n                          \"from\"\n                        );\n                      }}\n                      className=\"form-control\"\n                      required\n                    />\n                  </div>\n                </div>\n\n                {/* fromCountry */}\n                <div className=\"col-md-6\">\n                  <div className=\"form-group mb-3\">\n                    <label htmlFor=\"\">From Country</label>\n                    <input\n                      type=\"text\"\n                      name=\"fromCountry\"\n                      id=\"fromCountry\"\n                      className=\"form-control\"\n                      value={fromCountry}\n                      onChange={this.onChange}\n                      required\n                    />\n                  </div>\n                </div>\n\n                {/* toName */}\n                <div className=\"col-md-6\">\n                  <div className=\"form-group mb-3\">\n                    <label htmlFor=\"\">To Name</label>\n                    <input\n                      type=\"text\"\n                      name=\"toName\"\n                      id=\"toName\"\n                      className=\"form-control\"\n                      required\n                    />\n                  </div>\n                </div>\n\n                {/* toRefNumber */}\n                <div className=\"col-md-6\">\n                  <div className=\"form-group mb-3\">\n                    <label htmlFor=\"\">To Reference Number</label>\n                    <input\n                      type=\"text\"\n                      name=\"toRefNumber\"\n                      id=\"toRefNumber\"\n                      className=\"form-control\"\n                    />\n                  </div>\n                </div>\n\n                {/* toStreetNumber */}\n                <div className=\"col-md-6\">\n                  <div className=\"form-group mb-3\">\n                    <label htmlFor=\"\">To Street Number</label>\n                    <input\n                      type=\"text\"\n                      name=\"toStreetNumber\"\n                      id=\"toStreetNumber\"\n                      className=\"form-control\"\n                      value={toStreetNumber}\n                      onChange={(e) => {\n                        this.onChange(e);\n                        this.zipCodeLookup(\n                          toCity,\n                          toState,\n                          e.target.value,\n                          toStreetNumber2,\n                          \"to\"\n                        );\n                        this.verifyAddress(\n                          e.target.value,\n                          toStreetNumber2,\n                          toCity,\n                          toState,\n                          toZip,\n                          \"to\"\n                        );\n                      }}\n                      required\n                    />\n                  </div>\n                </div>\n\n                {/* toStreetNumber2 */}\n                <div className=\"col-md-6\">\n                  <div className=\"form-group mb-3\">\n                    <label htmlFor=\"\">To Street Number 2</label>\n                    <input\n                      type=\"text\"\n                      name=\"toStreetNumber2\"\n                      id=\"toStreetNumber2\"\n                      className=\"form-control\"\n                      value={toStreetNumber2}\n                      onChange={(e) => {\n                        this.onChange(e);\n                        this.zipCodeLookup(\n                          toCity,\n                          toState,\n                          toStreetNumber,\n                          e.target.value,\n                          \"to\"\n                        );\n                        this.verifyAddress(\n                          toStreetNumber,\n                          e.target.value,\n                          toCity,\n                          toState,\n                          toZip,\n                          \"to\"\n                        );\n                      }}\n                    />\n                  </div>\n                </div>\n\n                {/* toCity */}\n                <div className=\"col-md-6\">\n                  <div className=\"form-group mb-3\">\n                    <label htmlFor=\"\">To City</label>\n                    <input\n                      type=\"text\"\n                      name=\"toCity\"\n                      id=\"toCity\"\n                      className=\"form-control\"\n                      value={toCity}\n                      onChange={(e) => {\n                        this.onChange(e);\n                        this.zipCodeLookup(\n                          e.target.value,\n                          toState,\n                          toStreetNumber,\n                          toStreetNumber2,\n                          \"to\"\n                        );\n                        this.verifyAddress(\n                          toStreetNumber,\n                          toStreetNumber2,\n                          e.target.value,\n                          toState,\n                          toZip,\n                          \"to\"\n                        );\n                      }}\n                      required\n                    />\n                  </div>\n                </div>\n\n                {/* toState */}\n                <div className=\"col-md-6\">\n                  <div className=\"form-group mb-3\">\n                    <label htmlFor=\"\">To State</label>\n                    <input\n                      type=\"text\"\n                      name=\"toState\"\n                      id=\"toState\"\n                      className=\"form-control\"\n                      value={toState}\n                      onChange={(e) => {\n                        this.onChange(e);\n                        this.zipCodeLookup(\n                          toCity,\n                          e.target.value,\n                          toStreetNumber,\n                          toStreetNumber2,\n                          \"to\"\n                        );\n                        this.verifyAddress(\n                          toStreetNumber,\n                          toStreetNumber2,\n                          toCity,\n                          e.target.value,\n                          toZip,\n                          \"to\"\n                        );\n                      }}\n                      maxLength={2}\n                      required\n                    />\n                  </div>\n                </div>\n\n                {/* toZip */}\n                <div className=\"col-md-6\">\n                  <div className=\"form-group mb-3\">\n                    <label htmlFor=\"\">To Zip</label>\n                    <input\n                      type=\"text\"\n                      name=\"toZip\"\n                      id=\"toZip\"\n                      className=\"form-control\"\n                      value={toZip}\n                      onChange={(e) => {\n                        this.onChange(e);\n                        this.cityStateLookup(e.target.value, \"to\");\n                        this.verifyAddress(\n                          toStreetNumber,\n                          toStreetNumber2,\n                          toCity,\n                          toState,\n                          e.target.value,\n                          \"to\"\n                        );\n                      }}\n                      required\n                    />\n                  </div>\n                </div>\n\n                {/* toCountry */}\n                <div className=\"col-md-6\">\n                  <div className=\"form-group mb-3\">\n                    <label htmlFor=\"\">To Country</label>\n                    <input\n                      type=\"text\"\n                      name=\"toCountry\"\n                      id=\"toCountry\"\n                      className=\"form-control\"\n                      value={toCountry}\n                      onChange={this.onChange}\n                      required\n                    />\n                  </div>\n                </div>\n\n                <div className=\"col-12\">\n                  <div className=\"form-group mb-3\">\n                    <button type=\"submit\" className=\"btn btn-primary\">\n                      Generate Label {loader}\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </form>\n          </div>\n        </Modal>\n\n        <Modal id=\"viewLabel\" title=\"Read Label\" className=\"modal-lg\">\n          <div className=\"modal-body\">\n            {/* table */}\n            <div className=\"table-responsive\">\n              <table className=\"table table-sm table-nowrap card-table\">\n                <thead>\n                  {Object.keys(label).map((key, index) => (\n                    <tr>\n                      <th key={index}>{key}</th>\n                      <th key={index}>\n                        {key === \"statusMessage\" ? (\n                          <ul>\n                            {JSON.parse(label[key] || \"[]\").length > 0 &&\n                              JSON.parse(label[key]).map((item) => (\n                                <li>{item}</li>\n                              ))}\n                          </ul>\n                        ) : (\n                          label[key]\n                        )}\n                      </th>\n                    </tr>\n                  ))}\n                </thead>\n              </table>\n            </div>\n          </div>\n        </Modal>\n\n        {/* confirmation modal */}\n        <Modal id=\"recycleModal\" title=\"Recycle Label Barcode\">\n          <div className=\"text-center\">\n            <h3>Are you sure you want to recycle this label's barcode?</h3>\n            <div className=\"form-group mt-4\">\n              <button\n                className=\"btn btn-primary m-2\"\n                data-bs-dismiss=\"modal\"\n                id=\"closeRecycleModal\"\n              >\n                Go back\n              </button>\n              <button\n                className=\"btn btn-danger\"\n                onClick={this.recycleLabel}\n                data-bs-dismiss=\"modal\"\n              >\n                Continue {recycleLoader}\n              </button>\n            </div>\n          </div>\n        </Modal>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport Header from \"../components/Header\";\nimport axios from \"axios\";\nimport { server, config } from \"../env\";\nimport Loader from \"../components/Loader\";\nimport Alert from \"../components/Alert\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Settings extends PureComponent {\n  state = {\n    loader: \"\",\n    message: \"\",\n  };\n\n  update = async (e) => {\n    e.preventDefault();\n\n    this.setState({\n      loader: <Loader />,\n    });\n\n    const params = {\n      password: e.target.password.value,\n    };\n\n    await axios\n      .post(server + \"/api/admin/update-password\", params, config)\n      .then((rsp) => {\n        this.setState({\n          message: <Alert className=\"success\" message={rsp.data.message} />,\n        });\n      })\n      .catch((err) => {\n        this.setState({\n          message: (\n            <Alert\n              className=\"danger\"\n              message={\n                err.response?.data.message || \"Error while updating password\"\n              }\n            />\n          ),\n        });\n      });\n    this.setState({\n      loader: \"\",\n    });\n  };\n\n  render() {\n    const { loader, message } = this.state;\n\n    return (\n      <div className=\"main-content\">\n        <Header pretitle=\"Overview\" title=\"Settings\" />\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-md-5\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <form onSubmit={this.update}>\n                    {message}\n                    <div className=\"form-group\">\n                      <label htmlFor=\"password\">Password</label>\n                      <input\n                        type=\"password\"\n                        className=\"form-control\"\n                        id=\"password\"\n                        placeholder=\"New Password\"\n                        required\n                      />\n                    </div>\n                    <div className=\"form-group\">\n                      <button type=\"submit\" className=\"btn btn-primary\">\n                        Update Password {loader}\n                      </button>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport Header from \"../components/Header\";\nimport axios from \"axios\";\nimport { server, config } from \"../env\";\nimport Loader from \"../components/Loader\";\nimport Alert from \"../components/Alert\";\nimport Modal from \"../components/Modal\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Stats extends PureComponent {\n  state = {\n    stats: [],\n    page: 1,\n    totalPages: 1,\n\n    loader: \"\",\n    message: \"\",\n  };\n\n  componentDidMount = () => {\n    this.readStats();\n  };\n\n  readStats = async () => {\n    await axios\n      .get(server + \"/api/admin/stats/read\", config)\n      .then((res) => {\n        this.setState({\n          stats: res.data.payload,\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  updateStats = async (e) => {\n    e.preventDefault();\n    this.setState({\n      loader: <Loader />,\n    });\n    const form = e.target;\n    const params = [\n      {\n        attr: \"priority_weight\",\n        value: form.priority_weight.value,\n      },\n      {\n        attr: \"express_weight\",\n        value: form.express_weight.value,\n      },\n      {\n        attr: \"firstclass_weight\",\n        value: form.firstclass_weight.value,\n      },\n      {\n        attr: \"signature_weight\",\n        value: form.signature_weight.value,\n      },\n      {\n        attr: \"priority_minimum_stock\",\n        value: form.priority_minimum_stock.value,\n      },\n      {\n        attr: \"express_minimum_stock\",\n        value: form.express_minimum_stock.value,\n      },\n      {\n        attr: \"firstclass_minimum_stock\",\n        value: form.firstclass_minimum_stock.value,\n      },\n      {\n        attr: \"signature_minimum_stock\",\n        value: form.signature_minimum_stock.value,\n      },\n    ];\n\n    await axios\n      .post(server + \"/api/admin/stats/update\", { params }, config)\n      .then((res) => {\n        this.setState({\n          loader: \"\",\n          message: <Alert className=\"success\" message={res.data.message} />,\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  render() {\n    const { stats } = this.state;\n    const { loader, message } = this.state;\n\n    return (\n      <div className=\"main-content\">\n        <Header pretitle=\"Overview\" title=\"Website Controls\" />\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <form onSubmit={this.updateStats}>\n                {message}\n                <div className=\"row\">\n                  <div className=\"col-md-6\">\n                    <div className=\"row g-2\">\n                      <div className=\"card\">\n                        <div className=\"card-body\">\n                          {stats.map(\n                            (s, i) =>\n                              i < 4 && (\n                                <div className=\"col-md-12\">\n                                  <div className=\"form-group\">\n                                    <label htmlFor=\"\">\n                                      {s.attr\n                                        .replaceAll(\"_\", \" \")\n                                        .toUpperCase()}\n                                    </label>\n                                    <input\n                                      type=\"text\"\n                                      name={s.attr}\n                                      className=\"form-control\"\n                                      defaultValue={s.value}\n                                      required\n                                    />\n                                  </div>\n                                </div>\n                              )\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-md-6\">\n                    <div className=\"row g-2\">\n                      <div className=\"card\">\n                        <div className=\"card-body\">\n                          {stats.map(\n                            (s, i) =>\n                              i > 3 && (\n                                <div className=\"col-md-12\">\n                                  <div className=\"form-group\">\n                                    <label htmlFor=\"\">\n                                      {s.attr\n                                        .replaceAll(\"_\", \" \")\n                                        .toUpperCase()}\n                                    </label>\n                                    <input\n                                      type=\"text\"\n                                      name={s.attr}\n                                      className=\"form-control\"\n                                      defaultValue={s.value}\n                                      required\n                                    />\n                                  </div>\n                                </div>\n                              )\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"form-group\">\n                  <button type=\"submit\" className=\"btn btn-primary\">\n                    Submit {loader}\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport Header from \"../components/Header\";\nimport axios from \"axios\";\nimport { server, config } from \"../env\";\nimport Loader from \"../components/Loader\";\nimport Alert from \"../components/Alert\";\nimport Modal from \"../components/Modal\";\nimport { Link } from \"react-router-dom\";\nimport { hideModal } from \"../tools/helper\";\n\nexport default class Users extends PureComponent {\n  state = {\n    users: [],\n    page: 1,\n    totalPages: 1,\n\n    loader: \"\",\n    message: \"\",\n    pager: {\n      page: 1,\n      search: \"\",\n    },\n    user: {},\n  };\n\n  componentDidMount = () => {\n    this.readUsers();\n  };\n\n  readUsers = async (\n    search = this.state.pager.search,\n    page = this.state.pager.page\n  ) => {\n    await axios\n      .post(\n        server + \"/api/admin/user/readAll\",\n        {\n          search,\n          page,\n        },\n        config\n      )\n      .then((res) => {\n        this.setState({\n          users: res.data.payload.users,\n          pager: res.data.payload.pager,\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  blockUnblockUser = async (userId) => {\n    await axios\n      .post(\n        server + \"/api/admin/user/change-status\",\n        {\n          userId,\n        },\n        config\n      )\n      .then((rsp) => {\n        this.readUsers();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  newUser = async (e) => {\n    e.preventDefault();\n\n    this.setState({\n      loader: <Loader />,\n    });\n\n    const params = {\n      username: e.target.username.value,\n      email: e.target.email.value,\n      password: e.target.password.value,\n    };\n\n    await axios\n      .post(server + \"/api/admin/user/create\", params, config)\n      .then((rsp) => {\n        this.setState({\n          message: (\n            <Alert className=\"success\" message=\"User Created Successfully\" />\n          ),\n        });\n        this.readUsers();\n        hideModal(\"newUser\");\n      })\n      .catch((err) => {\n        console.log(err);\n        this.setState({\n          message: <Alert className=\"danger\" message=\"Error Creating User\" />,\n        });\n      });\n    this.setState({\n      loader: \"\",\n    });\n  };\n\n  updateUser = async (e) => {\n    e.preventDefault();\n\n    this.setState({\n      loader: <Loader />,\n    });\n\n    await axios\n      .post(server + \"/api/admin/user/update\", this.state.user, config)\n      .then((rsp) => {\n        this.setState({\n          message: (\n            <Alert className=\"success\" message=\"User updated successfully\" />\n          ),\n        });\n        hideModal(\"updateUser\");\n        this.readUsers();\n      })\n      .catch((err) => {\n        console.log(err);\n        this.setState({\n          message: <Alert className=\"danger\" message=\"Error updating user\" />,\n        });\n      });\n    this.setState({\n      loader: \"\",\n    });\n  };\n\n  render() {\n    const { users, user } = this.state;\n    const { loader, message } = this.state;\n\n    return (\n      <div className=\"main-content\">\n        <Header pretitle=\"Overview\" title=\"Users\" />\n        <div className=\"container-fluid\">\n          <div className=\"d-flex justify-content-end mb-3 w-100\">\n            <button\n              className=\"btn btn-primary\"\n              data-bs-toggle=\"modal\"\n              data-bs-target=\"#newUser\"\n            >\n              + New User\n            </button>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"card\">\n                <div className=\"table-responsive\">\n                  <table className=\"table table-sm table-nowrap card-table\">\n                    <thead>\n                      <tr>\n                        <th>\n                          <Link to=\"#\" className=\"text-muted\">\n                            ID\n                          </Link>\n                        </th>\n                        <th>\n                          <Link to=\"#\" className=\"text-muted\">\n                            Username\n                          </Link>\n                        </th>\n                        <th>\n                          <Link to=\"#\" className=\"text-muted\">\n                            Email\n                          </Link>\n                        </th>\n                        <th>\n                          <Link to=\"#\" className=\"text-muted\">\n                            Balance\n                          </Link>\n                        </th>\n                        <th>\n                          <Link to=\"#\" className=\"text-muted\">\n                            Status\n                          </Link>\n                        </th>\n                        <th>\n                          <Link to=\"#\" className=\"text-muted\">\n                            Date\n                          </Link>\n                        </th>\n                        <th>\n                          <Link to=\"#\" className=\"text-muted\">\n                            Actions\n                          </Link>\n                        </th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"list\">\n                      {users.map((user) => (\n                        <tr key={user.id}>\n                          <td>{user.id}</td>\n                          <td>{user.username}</td>\n                          <td>{user.email}</td>\n                          <td>${user.balance.toFixed(2)}</td>\n                          <td>\n                            {user.isActive ? (\n                              <span className=\"badge bg-success\">Active</span>\n                            ) : (\n                              <span className=\"badge bg-danger\">Blocked</span>\n                            )}\n                          </td>\n                          <td>{new Date(user.createdAt).toDateString()}</td>\n                          <td>\n                            <Link\n                              className=\"btn btn-success btn-sm me-2\"\n                              to={\"/pricing/\" + user.id}\n                            >\n                              <i className=\"fe fe-dollar-sign\"></i>\n                            </Link>\n                            <button\n                              className=\"btn btn-warning btn-sm me-2\"\n                              onClick={() => this.setState({ user: user })}\n                              data-bs-toggle=\"modal\"\n                              data-bs-target=\"#updateUser\"\n                            >\n                              <div className=\"fe fe-edit\"></div>\n                            </button>\n                            {user.isActive ? (\n                              <button\n                                className=\"btn btn-danger btn-sm\"\n                                onClick={() => this.blockUnblockUser(user.id)}\n                              >\n                                Block\n                              </button>\n                            ) : (\n                              <button\n                                className=\"btn btn-success btn-sm\"\n                                onClick={() => this.blockUnblockUser(user.id)}\n                              >\n                                Unblock\n                              </button>\n                            )}\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <Modal id=\"newUser\" title=\"New User\">\n          <div className=\"modal-body\">\n            <form onSubmit={this.newUser}>\n              {message}\n              <div className=\"form-group\">\n                <label htmlFor=\"\">Username</label>\n                <input\n                  type=\"text\"\n                  name=\"username\"\n                  id=\"username\"\n                  className=\"form-control\"\n                  required\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"\">Email</label>\n                <input\n                  type=\"email\"\n                  name=\"email\"\n                  id=\"email\"\n                  className=\"form-control\"\n                  required\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"\">Password</label>\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  className=\"form-control\"\n                  required\n                />\n              </div>\n              <div className=\"form-group\">\n                <button type=\"submit\" className=\"btn btn-primary\">\n                  Add User {loader}\n                </button>\n              </div>\n            </form>\n          </div>\n        </Modal>\n\n        <Modal id=\"updateUser\" title=\"Update User\">\n          <div className=\"modal-body\">\n            {user && (\n              <form onSubmit={this.updateUser}>\n                {message}\n                <div className=\"form-group\">\n                  <label htmlFor=\"\">Username</label>\n                  <input\n                    type=\"text\"\n                    name=\"username\"\n                    id=\"username\"\n                    className=\"form-control\"\n                    value={user.username}\n                    onChange={(e) =>\n                      this.setState({\n                        user: { ...user, username: e.target.value },\n                      })\n                    }\n                    required\n                  />\n                </div>\n                {/* <div className=\"form-group\">\n                  <label htmlFor=\"\">Email</label>\n                  <input\n                    type=\"email\"\n                    name=\"email\"\n                    id=\"email\"\n                    className=\"form-control\"\n                    value={user.email}\n                    onChange={(e) =>\n                      this.setState({\n                        user: { ...user, email: e.target.value },\n                      })\n                    }\n                    required\n                  />\n                </div> */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"\">Balance (USD)</label>\n                  <br />\n                  <small>\n                    This will replace the current balance of the user\n                  </small>\n                  <input\n                    type=\"number\"\n                    name=\"balance\"\n                    id=\"number\"\n                    className=\"form-control\"\n                    value={user.balance}\n                    step=\"0.01\"\n                    onChange={(e) =>\n                      this.setState({\n                        user: { ...user, balance: parseFloat(e.target.value) },\n                      })\n                    }\n                    required\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"\">\n                    Password (Leave empty for old password)\n                  </label>\n                  <input\n                    type=\"password\"\n                    name=\"password\"\n                    id=\"password\"\n                    className=\"form-control\"\n                    onChange={(e) =>\n                      this.setState({\n                        user: { ...user, password: e.target.value },\n                      })\n                    }\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <button type=\"submit\" className=\"btn btn-primary\">\n                    Update User {loader}\n                  </button>\n                </div>\n              </form>\n            )}\n          </div>\n        </Modal>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport Header from \"../components/Header\";\nimport axios from \"axios\";\nimport { server, config } from \"../env\";\nimport Loader from \"../components/Loader\";\nimport Alert from \"../components/Alert\";\nimport Modal from \"../components/Modal\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Workers extends PureComponent {\n  state = {\n    workers: [],\n    page: 1,\n    totalPages: 1,\n\n    loader: \"\",\n    message: \"\",\n  };\n\n  componentDidMount = () => {\n    this.readWorkers();\n  };\n\n  readWorkers = async () => {\n    await axios\n      .get(server + \"/api/admin/read-workers\", config)\n      .then((res) => {\n        this.setState({\n          workers: res.data.payload.workers,\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  blockUnblockWorker = async (id) => {\n    await axios\n      .post(server + \"/api/admin/block/\" + id, {}, config)\n      .then((rsp) => {\n        this.readWorkers();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  newWorker = async (e) => {\n    e.preventDefault();\n\n    this.setState({\n      loader: <Loader />,\n    });\n\n    const params = {\n      username: e.target.username.value,\n      email: e.target.email.value,\n      password: e.target.password.value,\n    };\n\n    await axios\n      .post(server + \"/api/admin/create-worker\", params, config)\n      .then((rsp) => {\n        this.setState({\n          message: (\n            <Alert className=\"success\" message=\"Worker Created Successfully\" />\n          ),\n        });\n        this.readWorkers();\n      })\n      .catch((err) => {\n        console.log(err);\n        this.setState({\n          message: <Alert className=\"danger\" message=\"Error Creating Worker\" />,\n        });\n      });\n    this.setState({\n      loader: \"\",\n    });\n  };\n\n  render() {\n    const { workers } = this.state;\n    const { loader, message } = this.state;\n\n    return (\n      <div className=\"main-content\">\n        <Header pretitle=\"Overview\" title=\"Workers\" />\n        <div className=\"container-fluid\">\n          <div className=\"d-flex justify-content-end mb-3 w-100\">\n            <button\n              className=\"btn btn-primary\"\n              data-bs-toggle=\"modal\"\n              data-bs-target=\"#newWorker\"\n            >\n              + New Worker\n            </button>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"card\">\n                <div className=\"table-responsive\">\n                  <table className=\"table table-sm table-nowrap card-table\">\n                    <thead>\n                      <tr>\n                        <th>\n                          <Link to=\"#\" className=\"text-muted\">\n                            ID\n                          </Link>\n                        </th>\n                        <th>\n                          <Link to=\"#\" className=\"text-muted\">\n                            Username\n                          </Link>\n                        </th>\n                        <th>\n                          <Link to=\"#\" className=\"text-muted\">\n                            Email\n                          </Link>\n                        </th>\n                        <th>\n                          <Link to=\"#\" className=\"text-muted\">\n                            Status\n                          </Link>\n                        </th>\n                        <th>\n                          <Link to=\"#\" className=\"text-muted\">\n                            Date\n                          </Link>\n                        </th>\n                        <th>\n                          <Link to=\"#\" className=\"text-muted\">\n                            Actions\n                          </Link>\n                        </th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"list\">\n                      {workers.map((worker) => (\n                        <tr key={worker.id}>\n                          <td>{worker.id}</td>\n                          <td>{worker.username}</td>\n                          <td>{worker.email}</td>\n                          <td>\n                            {worker.isActive ? (\n                              <span className=\"badge bg-success\">Active</span>\n                            ) : (\n                              <span className=\"badge bg-danger\">Blocked</span>\n                            )}\n                          </td>\n                          <td>{new Date(worker.createdAt).toDateString()}</td>\n                          <td>\n                            {worker.isActive ? (\n                              <button\n                                className=\"btn btn-danger btn-sm\"\n                                onClick={() =>\n                                  this.blockUnblockWorker(worker.id)\n                                }\n                              >\n                                Block\n                              </button>\n                            ) : (\n                              <button\n                                className=\"btn btn-success btn-sm\"\n                                onClick={() =>\n                                  this.blockUnblockWorker(worker.id)\n                                }\n                              >\n                                Unblock\n                              </button>\n                            )}\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <Modal id=\"newWorker\" title=\"New Worker\">\n          <div className=\"modal-body\">\n            <form onSubmit={this.newWorker}>\n              {message}\n              <div className=\"form-group\">\n                <label htmlFor=\"\">Username</label>\n                <input\n                  type=\"text\"\n                  name=\"username\"\n                  id=\"username\"\n                  className=\"form-control\"\n                  required\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"\">Email</label>\n                <input\n                  type=\"email\"\n                  name=\"email\"\n                  id=\"email\"\n                  className=\"form-control\"\n                  required\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"\">Password</label>\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  className=\"form-control\"\n                  required\n                />\n              </div>\n              <div className=\"form-group\">\n                <button type=\"submit\" className=\"btn btn-primary\">\n                  Add Worker {loader}\n                </button>\n              </div>\n            </form>\n          </div>\n        </Modal>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport Header from \"../components/Header\";\nimport { Link } from \"react-router-dom\";\nimport Modal from \"../components/Modal\";\nimport Loader from \"../components/Loader\";\nimport Alert from \"../components/Alert\";\nimport ApiRequests from \"../tools/ApiRequests\";\nconst apiRequests = new ApiRequests();\n\nexport default class Ticket extends PureComponent {\n  state = {\n    tickets: [],\n    ticketMessages: [],\n    pager: {\n      totalPage: 1,\n      search: \"\",\n      page: 1,\n    },\n    ticket: {},\n    action: \"\",\n    statusMessage: \"\",\n    createTicketMessage: \"\",\n    createTicketLoader: \"\",\n    statusLoader: \"\",\n    sendMessage: \"\",\n    sendLoader: \"\",\n  };\n\n  componentDidMount = () => {\n    this.readTickets();\n  };\n\n  readTickets = async (\n    page = this.state.pager.page,\n    search = this.state.pager.search\n  ) => {\n    const { data, error } = await apiRequests.getTickets(page, search);\n    if (!error)\n      this.setState({\n        tickets: data.tickets,\n        pager: { ...data.pager },\n      });\n  };\n\n  readTicketMessage = async (id) => {\n    const { data, error } = await apiRequests.getTicket(id);\n    if (!error)\n      this.setState({ ticket: data.ticket, ticketMessages: data.messages });\n  };\n\n  sendMessage = async (e) => {\n    e.preventDefault();\n    this.setState({ sendLoader: <Loader /> });\n\n    const { error } = await apiRequests.sendTicketMessage({\n      id: this.state.ticket.id,\n      message: e.target.message.value,\n    });\n\n    if (!error) {\n      this.readTicketMessage(this.state.ticket.id);\n      this.setState({\n        sendMessage: <Alert className=\"success\" message=\"Message sent\" />,\n      });\n    } else {\n      this.setState({\n        sendMessage: <Alert className=\"danger\" message=\"Error occured.\" />,\n      });\n    }\n\n    this.setState({\n      sendLoader: \"\",\n    });\n  };\n\n  setTicketStatus = async () => {\n    await apiRequests.setTicketStatus({\n      id: this.state.ticket.id,\n      status: this.state.action,\n    });\n    this.readTickets();\n  };\n\n  createTicket = async (e) => {\n    e.preventDefault();\n    this.setState({ createTicketLoader: <Loader /> });\n    const { subject, message } = e.target;\n    const error = await apiRequests.createTicket({\n      subject: subject.value,\n      message: message.value,\n    });\n    if (!error) {\n      this.setState({\n        createTicketMessage: (\n          <Alert\n            className=\"success\"\n            message=\"Ticket has been created successfully\"\n          />\n        ),\n      });\n      this.readTickets();\n    } else {\n      this.setState({\n        createTicketMessage: (\n          <Alert className=\"danger\" message=\"Error while creating ticket.\" />\n        ),\n      });\n    }\n    this.setState({ createTicketLoader: \"\" });\n  };\n\n  render() {\n    const {\n      tickets,\n      ticketMessages,\n      ticket,\n      action,\n      statusMessage,\n      statusLoader,\n      sendMessage,\n      sendLoader,\n      pager,\n      createTicketLoader,\n      createTicketMessage,\n    } = this.state;\n\n    return (\n      <div className=\"main-content\">\n        <Header pretitle=\"Overview\" title=\"Tickets\" />\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <div className=\"card\">\n                <div className=\"card-header\">\n                  <div className=\"card-title\">All Tickets</div>\n                  <button\n                    className=\"btn btn-primary\"\n                    data-bs-toggle=\"modal\"\n                    data-bs-target=\"#createTicket\"\n                  >\n                    New Ticket\n                  </button>\n                </div>\n                <div className=\"card-body\">\n                  <div className=\"table-responsive\">\n                    <table className=\"table table-sm table-nowrap card-table\">\n                      <thead>\n                        <tr>\n                          <th>\n                            <Link to=\"#\" className=\"text-muted\">\n                              ID\n                            </Link>\n                          </th>\n                          <th>\n                            <Link to=\"#\" className=\"text-muted\">\n                              Subject\n                            </Link>\n                          </th>\n                          <th>\n                            <Link to=\"#\" className=\"text-muted\">\n                              Last Update\n                            </Link>\n                          </th>\n                          <th>\n                            <Link to=\"#\" className=\"text-muted\">\n                              Last Message From\n                            </Link>\n                          </th>\n                          <th>\n                            <Link to=\"#\" className=\"text-muted\">\n                              Status\n                            </Link>\n                          </th>\n                          <th>\n                            <Link to=\"#\" className=\"text-muted\">\n                              Date\n                            </Link>\n                          </th>\n\n                          <th>\n                            <Link to=\"#\" className=\"text-muted\">\n                              Action\n                            </Link>\n                          </th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {tickets.map((ticket) => (\n                          <tr key={ticket.id}>\n                            <td>{ticket.id}</td>\n                            <td>{ticket.subject}</td>\n                            <td>{ticket.lastUpdate}</td>\n                            <td>{ticket.lastMessageFrom}</td>\n                            <td>\n                              {ticket.status === \"open\" ? (\n                                <span className=\"badge bg-success\">Open</span>\n                              ) : (\n                                <span className=\"badge bg-danger\">Closed</span>\n                              )}\n                            </td>\n                            <td>{ticket.date}</td>\n\n                            <td>\n                              <button\n                                className=\"btn btn-primary btn-sm me-2\"\n                                onClick={() => {\n                                  this.setState({\n                                    ticket,\n                                    action:\n                                      ticket.status === \"open\"\n                                        ? \"open\"\n                                        : \"close\",\n                                  });\n                                  this.readTicketMessage(ticket.id);\n                                }}\n                                data-bs-toggle=\"modal\"\n                                data-bs-target=\"#message\"\n                              >\n                                <i className=\"fe fe-message-square\"></i>\n                              </button>\n                              {ticket.status === \"open\" && (\n                                <button\n                                  className=\"btn btn-success btn-sm\"\n                                  onClick={() =>\n                                    this.setState({ ticket, action: \"close\" })\n                                  }\n                                  data-bs-toggle=\"modal\"\n                                  data-bs-target=\"#setStatus\"\n                                >\n                                  Close\n                                </button>\n                              )}\n                            </td>\n                          </tr>\n                        ))}\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              </div>\n              <nav className=\"mt-3\">\n                <ul className=\"pagination justify-content-center\">\n                  {pager.page > 1 && (\n                    <li\n                      className=\"page-item bg-light rounded\"\n                      onClick={() =>\n                        this.readTickets(pager.page - 1, pager.search)\n                      }\n                    >\n                      <Link to=\"#\" className=\"page-link\">\n                        Previous\n                      </Link>\n                    </li>\n                  )}\n\n                  {pager.page > 1 && (\n                    <li\n                      className=\"page-item bg-light rounded\"\n                      onClick={() =>\n                        this.readTickets(pager.page - 1, pager.search)\n                      }\n                    >\n                      <Link to=\"#\" className=\"page-link\">\n                        {pager.page - 1}\n                      </Link>\n                    </li>\n                  )}\n\n                  <li className=\"page-item bg-primary rounded\">\n                    <Link to=\"#\" className=\"page-link\">\n                      {pager.page}\n                    </Link>\n                  </li>\n\n                  {pager.totalPage > pager.page && (\n                    <li\n                      className=\"page-item bg-light rounded\"\n                      onClick={() => this.readTickets(pager.next, pager.search)}\n                    >\n                      <Link to=\"#\" className=\"page-link\">\n                        {pager.page + 1}\n                      </Link>\n                    </li>\n                  )}\n\n                  {pager.totalPage > pager.page && (\n                    <li\n                      className=\"page-item bg-light rounded\"\n                      onClick={() =>\n                        this.readTickets(pager.page + 1, pager.search)\n                      }\n                    >\n                      <Link to=\"#\" className=\"page-link\">\n                        Next\n                      </Link>\n                    </li>\n                  )}\n                </ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n\n        {/* View Ticket Messages */}\n        <Modal id=\"message\" title={\"Ticket Messages - \" + ticket?.subject}>\n          <div className=\"modal-body\">\n            {/* messages */}\n            <div\n              className=\"card border mb-3\"\n              style={{\n                height: \"400px\",\n                overflowY: \"auto\",\n              }}\n            >\n              <div className=\"card-body\">\n                {ticketMessages.map((message) => (\n                  <div key={message.id}>\n                    <div\n                      className={\n                        \"row \" +\n                        (message.from === \"Admin\" &&\n                          \"justify-content-end text-end text-white\")\n                      }\n                    >\n                      <div\n                        className=\"col-auto\"\n                        style={{\n                          maxWidth: \"80%\",\n                        }}\n                      >\n                        <div\n                          className={`card border bg-${\n                            message.from === \"Admin\"\n                              ? \"primary text-white\"\n                              : \"info\"\n                          } mb-2`}\n                        >\n                          <div\n                            className={`card-body pb-1 px-2 pt-1 text-${\n                              message.from === \"Admin\" ? \"white\" : \"dark\"\n                            }`}\n                          >\n                            {message.message}\n                            <p\n                              className={`p-0 m-0 text-${\n                                message.from === \"Admin\" ? \"white\" : \"gray\"\n                              }`}\n                              style={{\n                                fontSize: \"8px\",\n                              }}\n                            >\n                              {new Date(message.date).toLocaleString()} -\n                              {message.from !== \"Admin\" ? message.from : \"You\"}\n                            </p>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            {/* {action === \"open\" && ( */}\n            <form onSubmit={this.sendMessage}>\n              {sendMessage}\n              <div className=\"form-group mb-3\">\n                <label htmlFor=\"name\">Write Message</label>\n                <textarea\n                  name=\"message\"\n                  id=\"message\"\n                  cols=\"30\"\n                  rows=\"3\"\n                  className=\"form-control\"\n                  required\n                ></textarea>\n              </div>\n              <div className=\"form-group text-end\">\n                <button type=\"submit\" className=\"btn btn-primary\">\n                  Send Message {sendLoader}\n                </button>\n              </div>\n            </form>\n            {/* )} */}\n          </div>\n        </Modal>\n\n        {/* Create Ticket */}\n        <Modal id=\"createTicket\" title=\"Create Ticket\">\n          <div className=\"modal-body\">\n            <form onSubmit={this.createTicket}>\n              {createTicketMessage}\n              <div className=\"form-group mb-3\">\n                <label htmlFor=\"subject\">Subject</label>\n                <input\n                  type=\"text\"\n                  name=\"subject\"\n                  id=\"subject\"\n                  className=\"form-control\"\n                />\n              </div>\n              <div className=\"form-group mb-3\">\n                <label htmlFor=\"subject\">Message</label>\n                <textarea\n                  name=\"message\"\n                  id=\"message\"\n                  cols=\"30\"\n                  rows=\"5\"\n                  className=\"form-control\"\n                  required\n                ></textarea>\n              </div>\n              <div className=\"form-group text-end mb-0\">\n                <button className=\"btn btn-primary\">\n                  Create Ticket {createTicketLoader}\n                </button>\n              </div>\n            </form>\n          </div>\n        </Modal>\n\n        {/* Close/Open Ticket */}\n        <Modal id=\"setStatus\" title={action + \" ticket\"}>\n          <div className=\"text-center\">\n            {statusMessage}\n            <h3>Are you sure you want to {action} ticket?</h3>\n            <div className=\"form-group mt-4\">\n              <button className=\"btn btn-primary m-2\" data-bs-dismiss=\"modal\">\n                Go back\n              </button>\n              <button\n                className=\"btn btn-danger\"\n                onClick={this.setTicketStatus}\n                data-bs-dismiss=\"modal\"\n              >\n                Continue {statusLoader}\n              </button>\n            </div>\n          </div>\n        </Modal>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport Header from \"../components/Header\";\nimport axios from \"axios\";\nimport { server, config } from \"../env\";\nimport Loader from \"../components/Loader\";\nimport Alert from \"../components/Alert\";\nimport Modal from \"../components/Modal\";\nimport { Link } from \"react-router-dom\";\nimport { hideModal } from \"../tools/helper\";\nimport ApiRequests from \"../tools/ApiRequests\";\nconst apiRequests = new ApiRequests();\n\nexport default class Pricing extends PureComponent {\n  state = {\n    userId: parseInt(window.location.href.split(\"/\").pop()),\n    pricing: [],\n    pricingObj: {},\n\n    loader: {\n      create: \"\",\n      update: \"\",\n    },\n    message: {\n      create: \"\",\n      update: \"\",\n    },\n\n    ticket: {},\n  };\n\n  componentDidMount = () => {\n    if (this.state.userId) {\n      this.readPricing(this.state.userId);\n    } else {\n      this.readPricing();\n    }\n  };\n\n  readPricing = async (id = this.state.userId) => {\n    const { data } = await apiRequests.getPricing(id);\n    this.setState({\n      pricing: Object.keys(data).length > 0 ? data : [],\n    });\n  };\n\n  addPricing = async (e) => {\n    e.preventDefault();\n    this.setState({\n      loader: { ...this.state.loader, create: <Loader /> },\n    });\n\n    const form = e.target;\n    const userId = this.state.userId;\n    const data = {\n      type: form.type.value,\n      fromWeight: form.fromWeight.value,\n      toWeight: form.toWeight.value,\n      price: parseFloat(form.price.value),\n      userId: userId,\n    };\n\n    var error = \"\";\n\n    if (userId) error = await apiRequests.createUserPricing(data);\n    else error = await apiRequests.createPricing(data);\n\n    if (!error) {\n      this.setState({\n        message: {\n          ...this.state.message,\n          create: (\n            <Alert className=\"success\" message=\"Pricing created sucessfully.\" />\n          ),\n        },\n      });\n    } else {\n      this.setState({\n        message: {\n          ...this.state.message,\n          create: (\n            <Alert className=\"danger\" message=\"Error while creating price.\" />\n          ),\n        },\n      });\n    }\n    this.setState({\n      loader: { ...this.state.loader, create: \"\" },\n    });\n    this.readPricing();\n    hideModal(\"newPricing\");\n  };\n\n  updatePricing = async (e) => {\n    e.preventDefault();\n    this.setState({\n      loader: { ...this.state.loader, update: <Loader /> },\n    });\n\n    const form = e.target;\n    const userId = this.state.userId;\n    const data = {\n      id: this.state.pricingObj?.id,\n      type: form.type.value,\n      fromWeight: form.fromWeight.value,\n      toWeight: form.toWeight.value,\n      price: parseFloat(form.price.value),\n    };\n\n    var error = \"\";\n\n    if (userId) error = await apiRequests.updateUserPricing(data);\n    else error = await apiRequests.updatePricing(data);\n\n    if (!error) {\n      this.setState({\n        message: {\n          ...this.state.message,\n          update: (\n            <Alert className=\"success\" message=\"Pricing updated sucessfully.\" />\n          ),\n        },\n      });\n    } else {\n      this.setState({\n        message: {\n          ...this.state.message,\n          update: (\n            <Alert className=\"danger\" message=\"Error while updating price.\" />\n          ),\n        },\n      });\n    }\n    this.setState({\n      loader: { ...this.state.loader, update: \"\" },\n    });\n    this.readPricing();\n    hideModal(\"updatePrice\");\n  };\n\n  deletePricing = async (id) => {\n    const userId = this.state.userId;\n    if (userId) await apiRequests.deleteUserPricing(id);\n    else await apiRequests.deletePricing(id);\n    this.readPricing();\n  };\n\n  render() {\n    const { pricing, pricingObj, userId } = this.state;\n    const { loader, message } = this.state;\n\n    return (\n      <div className=\"main-content\">\n        <Header pretitle=\"Overview\" title=\"Pricing\" />\n        <div className=\"container-fluid\">\n          <div className=\"d-flex justify-content-end mb-3 w-100\">\n            <button\n              className=\"btn btn-primary\"\n              data-bs-toggle=\"modal\"\n              data-bs-target=\"#newPricing\"\n            >\n              + New Pricing\n            </button>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"card\">\n                {userId ? (\n                  <div className=\"card-header\">USER - {userId}</div>\n                ) : (\n                  \"\"\n                )}\n                <div className=\"table-responsive\">\n                  <table className=\"table table-sm table-nowrap card-table\">\n                    <thead>\n                      <tr>\n                        <th>\n                          <Link to=\"#\" className=\"text-muted\">\n                            ID\n                          </Link>\n                        </th>\n                        <th>\n                          <Link to=\"#\" className=\"text-muted\">\n                            TYPE\n                          </Link>\n                        </th>\n                        <th>\n                          <Link to=\"#\" className=\"text-muted\">\n                            FROM WEIGHT\n                          </Link>\n                        </th>\n                        <th>\n                          <Link to=\"#\" className=\"text-muted\">\n                            TO WEIGHT\n                          </Link>\n                        </th>\n                        <th>\n                          <Link to=\"#\" className=\"text-muted\">\n                            PRICE\n                          </Link>\n                        </th>\n                        <th>\n                          <Link to=\"#\" className=\"text-muted\">\n                            Actions\n                          </Link>\n                        </th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"list\">\n                      {pricing.map((pricingObj) => (\n                        <tr key={pricingObj.id}>\n                          <td>{pricingObj.id}</td>\n                          <td>{pricingObj.type.toUpperCase()}</td>\n                          <td>{pricingObj.fromWeight} lb</td>\n                          <td>{pricingObj.toWeight} lb</td>\n                          <td>${pricingObj.price?.toFixed(2)}</td>\n                          <td>\n                            <button\n                              className=\"btn btn-warning btn-sm me-2\"\n                              onClick={() =>\n                                this.setState({ pricingObj: pricingObj })\n                              }\n                              data-bs-toggle=\"modal\"\n                              data-bs-target=\"#updatePrice\"\n                            >\n                              Edit\n                            </button>\n                            <button\n                              className=\"btn btn-danger btn-sm me-2\"\n                              onClick={() => this.deletePricing(pricingObj.id)}\n                            >\n                              Delete\n                            </button>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <Modal id=\"newPricing\" title=\"New Price\">\n          <div className=\"modal-body\">\n            <form onSubmit={this.addPricing}>\n              {message.create}\n              <div className=\"form-group\">\n                <label htmlFor=\"\">Type</label>\n                <select name=\"type\" id=\"type\" className=\"form-control\" required>\n                  <option value=\"priority\">Priority</option>\n                  <option value=\"express\">Express</option>\n                  <option value=\"firstclass\">First Class</option>\n                  <option value=\"signature\">Signature</option>\n                </select>\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"\">From Weight</label>\n                <input\n                  type=\"number\"\n                  step=\"0.01\"\n                  name=\"fromWeight\"\n                  id=\"fromWeight\"\n                  className=\"form-control\"\n                  required\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"\">To Weight</label>\n                <input\n                  type=\"number\"\n                  step=\"0.01\"\n                  name=\"toWeight\"\n                  id=\"toWeight\"\n                  className=\"form-control\"\n                  required\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"\">Price (USD)</label>\n                <input\n                  type=\"number\"\n                  step=\"0.01\"\n                  name=\"price\"\n                  id=\"price\"\n                  className=\"form-control\"\n                  required\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <button type=\"submit\" className=\"btn btn-primary\">\n                  Add Price {loader.create}\n                </button>\n              </div>\n            </form>\n          </div>\n        </Modal>\n\n        <Modal id=\"updatePrice\" title=\"Update Price\">\n          <div className=\"modal-body\">\n            {pricingObj && (\n              <form onSubmit={this.updatePricing}>\n                {message.update}\n                <div className=\"form-group\">\n                  <label htmlFor=\"\">Type</label>\n                  <select\n                    name=\"type\"\n                    id=\"type\"\n                    className=\"form-control\"\n                    value={pricingObj.type}\n                    onChange={(e) =>\n                      this.setState({\n                        pricingObj: {\n                          ...pricingObj,\n                          type: e.target.value,\n                        },\n                      })\n                    }\n                    required\n                  >\n                    <option value=\"priority\">Priority</option>\n                    <option value=\"express\">Express</option>\n                    <option value=\"firstclass\">First Class</option>\n                    <option value=\"signature\">Signature</option>\n                  </select>\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"\">From Weight</label>\n                  <input\n                    type=\"number\"\n                    step=\"0.01\"\n                    name=\"fromWeight\"\n                    id=\"fromWeight\"\n                    className=\"form-control\"\n                    defaultValue={pricingObj.fromWeight}\n                    required\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"\">To Weight</label>\n                  <input\n                    type=\"number\"\n                    step=\"0.01\"\n                    name=\"toWeight\"\n                    id=\"toWeight\"\n                    className=\"form-control\"\n                    defaultValue={pricingObj.toWeight}\n                    required\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"\">Price (USD)</label>\n                  <input\n                    type=\"number\"\n                    step=\"0.01\"\n                    name=\"price\"\n                    id=\"price\"\n                    className=\"form-control\"\n                    defaultValue={pricingObj.price}\n                    required\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <button type=\"submit\" className=\"btn btn-primary\">\n                    Update Price {loader.update}\n                  </button>\n                </div>\n              </form>\n            )}\n          </div>\n        </Modal>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport Header from \"../components/Header\";\nimport axios from \"axios\";\nimport { server, config } from \"../env\";\nimport Loader from \"../components/Loader\";\nimport Alert from \"../components/Alert\";\n\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport default class GeneateLabels extends PureComponent {\n  state = {\n    labels: [],\n    page: 1,\n    search: \"\",\n    totalPages: 1,\n    loader: \"\",\n    label: {},\n    message: \"\",\n    recycleLoader: \"\",\n\n    date: new Date(),\n    type: \"priority\",\n\n    fromStreetNumber: \"\",\n    fromStreetNumber2: \"\",\n    fromZip: \"\",\n    fromCity: \"\",\n    fromState: \"\",\n    fromCountry: \"\",\n\n    toStreetNumber: \"\",\n    toStreetNumber2: \"\",\n    toZip: \"\",\n    toCity: \"\",\n    toState: \"\",\n    toCountry: \"\",\n\n    isFromAddressVerified: false,\n    isToAddressVerified: false,\n    isVerificationInitiated: false,\n\n    addressMessage: \"\",\n    generateButtonClicked: 0,\n  };\n\n  componentDidMount = () => {};\n\n  generateLabel = async (e) => {\n    e.preventDefault();\n    if (this.state.generateButtonClicked > 0) {\n      window.location.reload();\n    }\n    this.setState({\n      loader: <Loader />,\n      generateButtonClicked: this.state.generateButtonClicked + 1,\n    });\n\n    const form = new FormData(e.target);\n    const data = {};\n    form.forEach((value, key) => {\n      data[key] = value;\n    });\n    data.date = this.state.date;\n\n    // format date in MM-DD-YYYY format\n    const date = new Date(data.date);\n    const day = date.getDate();\n    const month = date.getMonth() + 1;\n    const year = date.getFullYear();\n\n    data.date = month + \"-\" + day + \"-\" + year;\n\n    await axios\n      .post(server + \"/api/label/generate\", data, {\n        headers: {\n          \"x-api-key\": \"jKEAjLXKjgRCbBN2SsWP5wpTMk4cBfMh\",\n        },\n      })\n      .then((res) => {\n        this.setState({\n          addressMessage: (\n            <Alert className=\"success\" message={res.data.message} />\n          ),\n        });\n      })\n      .catch((err) => {\n        this.setState({\n          addressMessage: (\n            <Alert className=\"danger\" message={err.response?.data?.message} />\n          ),\n        });\n      });\n\n    this.setState({\n      loader: \"\",\n    });\n  };\n\n  onChange = (e) => {\n    this.setState({ isVerificationInitiated: true });\n    const { name, value } = e.target;\n    if (name === \"toZip\" || name === \"fromZip\") {\n      var code = \"\";\n      if (value.includes(\"-\") && value.length > 5) {\n        code = value;\n      } else if (value.includes(\"-\") && value.length <= 5) {\n        code = value.replaceAll(\"-\", \"\");\n      } else if (!value.includes(\"-\") && value.length > 5) {\n        code = value.substring(0, 5) + \"-\" + value.substring(5, value.length);\n      } else if (!value.includes(\"-\") && value.length < 5) {\n        code = value;\n      } else {\n        code = value;\n      }\n\n      this.setState({\n        [name]: code,\n      });\n    } else {\n      this.setState({\n        [e.target.name]: e.target.value,\n      });\n    }\n  };\n\n  verifyAddress = async (\n    street1,\n    street2,\n    city,\n    state,\n    zip,\n    type = \"from\"\n  ) => {};\n\n  zipCodeLookup = async (city, state, street1, street2, type = \"from\") => {\n    console.log(city, state, street1, street2);\n    if (!city) return;\n    if (!state) return;\n    if (!street1) return;\n\n    const obj = {};\n    if (street1) obj.street1 = street1;\n    if (street2) obj.street2 = street2;\n    if (city) obj.city = city;\n    if (state) obj.state = state;\n\n    this.setState({\n      message: <Alert className=\"info\" message=\"Processing...\" />,\n    });\n\n    var result = {};\n    await axios\n      .post(\n        server + \"/api/usps/zipcode\",\n        {\n          ...obj,\n        },\n        config\n      )\n      .then((res) => {\n        if (res.data.payload) {\n          result = res.data.payload;\n          this.setState({\n            message: \"\",\n          });\n        } else {\n          this.setState({\n            message: <Alert className=\"danger\" message=\"Invalid Address\" />,\n          });\n        }\n      })\n      .catch((err) => {\n        this.setState({\n          message: <Alert className=\"danger\" message=\"Invalid Address\" />,\n        });\n      });\n\n    const zip = result.zip;\n\n    if (type === \"from\" && result) {\n      this.setState({\n        fromZip: zip?.endsWith(\"-\") ? zip?.slice(0, 5) : zip,\n      });\n    }\n    if (type === \"to\" && result) {\n      this.setState({\n        toZip: zip?.endsWith(\"-\") ? zip?.slice(0, 5) : zip,\n      });\n    }\n  };\n\n  cityStateLookup = async (zip, type = \"form\") => {\n    if (zip.length !== 5) return;\n\n    var result;\n    const obj = {\n      zip: zip.replaceAll(\"-\", \"\"),\n    };\n\n    await axios\n      .post(\n        server + \"/api/usps/city-state\",\n        {\n          ...obj,\n        },\n        config\n      )\n      .then((res) => {\n        if (res.data.payload) {\n          result = res.data.payload;\n          console.log(res.data.payload);\n        }\n      })\n      .catch((err) => {});\n\n    if (type === \"from\") {\n      this.setState({\n        fromCity: result.city,\n        fromState: result.state,\n      });\n    }\n    if (type === \"to\") {\n      this.setState({\n        toCity: result.city,\n        toState: result.state,\n      });\n    }\n  };\n\n  recycleLabel = async () => {\n    this.setState({\n      recycleLoader: <Loader />,\n    });\n\n    await axios\n      .post(\n        server + \"/api/admin/recycle-label\",\n        {\n          id: this.state.label.id,\n        },\n        config\n      )\n      .then((res) => {\n        this.readLabels();\n        var modalCloseButton = document.getElementById(\"closeRecycleModal\");\n        if (modalCloseButton) modalCloseButton.click();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    this.setState({\n      recycleLoader: \"\",\n    });\n  };\n\n  render() {\n    const { date } = this.state;\n    const { loader } = this.state;\n\n    const {\n      type,\n      fromStreetNumber,\n      fromStreetNumber2,\n      fromZip,\n      fromCity,\n      fromState,\n      fromCountry,\n\n      toStreetNumber,\n      toStreetNumber2,\n      toZip,\n      toCity,\n      toState,\n      toCountry,\n    } = this.state;\n\n    // const { isFromAddressVerified, isToAddressVerified } = this.state;\n    const { isVerificationInitiated, addressMessage } = this.state;\n\n    return (\n      <div className=\"main-content\">\n        <Header pretitle=\"Overview\" title=\"Labels\" />\n        <div className=\"container-fluid\">\n          <form onSubmit={this.generateLabel}>\n            <span className={isVerificationInitiated ? \"\" : \"d-none\"}>\n              {addressMessage}\n            </span>\n\n            {/* Top ROw */}\n            <div className=\"card mb-4\">\n              <div className=\"card-body\">\n                <div className=\"row\">\n                  <div className=\"col-12 mb-3 text-center\">\n                    ** THIS IS NOT USPS VALIDATED **\n                  </div>\n                  <div className=\"col-md-4\">\n                    <div className=\"form-group mb-3\">\n                      <label htmlFor=\"\">Type</label>\n                      <select\n                        name=\"type\"\n                        id=\"type\"\n                        className=\"form-control\"\n                        required\n                        onChange={(e) =>\n                          this.setState({\n                            type: e.target.value,\n                          })\n                        }\n                      >\n                        <option value=\"priority\">Priority</option>\n                        <option value=\"express\">Express</option>\n                        <option value=\"firstclass\">First Class</option>\n                        <option value=\"signature\">Signature</option>\n                      </select>\n                    </div>\n                  </div>\n                  <div className=\"col-md-4\">\n                    <div className=\"form-group mb-3\">\n                      <label htmlFor=\"\">\n                        Weight ({type === \"firstclass\" ? \"oz\" : \"lb\"})\n                      </label>\n                      <input\n                        type=\"number\"\n                        name=\"weight\"\n                        id=\"weight\"\n                        className=\"form-control\"\n                        required\n                      />\n                    </div>\n                  </div>\n                  <div className=\"col-md-4\">\n                    <div className=\"form-group mb-3\">\n                      <label htmlFor=\"\">Date</label>\n                      <DatePicker\n                        selected={date}\n                        onChange={(date) => this.setState({ date })}\n                        className=\"form-control\"\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"row\">\n              {/* from */}\n              <div className=\"col-md-6\">\n                <div className=\"card\">\n                  <div className=\"card-body\">\n                    <div className=\"d-flex flex-column w-100\">\n                      {/* from name */}\n                      <div className=\"col-md-12\">\n                        <div className=\"form-group mb-3\">\n                          <label htmlFor=\"\">From Name</label>\n                          <input\n                            type=\"text\"\n                            name=\"fromName\"\n                            id=\"fromName\"\n                            className=\"form-control\"\n                            required\n                          />\n                        </div>\n                      </div>\n\n                      {/* fromRefNumber */}\n                      <div className=\"col-md-12\">\n                        <div className=\"form-group mb-3\">\n                          <label htmlFor=\"\">From Reference Number</label>\n                          <input\n                            type=\"text\"\n                            name=\"fromRefNumber\"\n                            id=\"fromRefNumber\"\n                            className=\"form-control\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* fromStreetNumber */}\n                      <div className=\"col-md-12\">\n                        <div className=\"form-group mb-3\">\n                          <label htmlFor=\"\">From Street Number</label>\n                          <input\n                            type=\"text\"\n                            name=\"fromStreetNumber\"\n                            id=\"fromStreetNumber\"\n                            className=\"form-control\"\n                            value={fromStreetNumber}\n                            onChange={(e) => {\n                              this.onChange(e);\n                              this.zipCodeLookup(\n                                fromCity,\n                                fromState,\n                                e.target.value,\n                                fromStreetNumber2,\n                                fromZip,\n                                \"from\"\n                              );\n                              this.verifyAddress(\n                                e.target.value,\n                                fromStreetNumber2,\n                                fromCity,\n                                fromState,\n                                \"from\"\n                              );\n                            }}\n                            required\n                          />\n                        </div>\n                      </div>\n\n                      {/* fromStreetNumber2 */}\n                      <div className=\"col-md-12\">\n                        <div className=\"form-group mb-3\">\n                          <label htmlFor=\"\">From Street Number 2</label>\n                          <input\n                            type=\"text\"\n                            name=\"fromStreetNumber2\"\n                            id=\"fromStreetNumber2\"\n                            className=\"form-control\"\n                            value={fromStreetNumber2}\n                            onChange={(e) => {\n                              this.onChange(e);\n                              this.zipCodeLookup(\n                                fromCity,\n                                fromState,\n                                fromStreetNumber,\n                                e.target.value,\n                                fromZip,\n                                \"from\"\n                              );\n                              this.verifyAddress(\n                                fromStreetNumber,\n                                e.target.value,\n                                fromCity,\n                                fromState,\n                                \"from\"\n                              );\n                            }}\n                          />\n                        </div>\n                      </div>\n\n                      {/* fromCity */}\n                      <div className=\"col-md-12\">\n                        <div className=\"form-group mb-3\">\n                          <label htmlFor=\"\">From City</label>\n                          <input\n                            type=\"text\"\n                            name=\"fromCity\"\n                            id=\"fromCity\"\n                            className=\"form-control\"\n                            value={fromCity}\n                            onChange={(e) => {\n                              this.onChange(e);\n                              this.zipCodeLookup(\n                                e.target.value,\n                                fromState,\n                                fromStreetNumber,\n                                fromStreetNumber2,\n                                \"from\"\n                              );\n                              this.verifyAddress(\n                                fromStreetNumber,\n                                fromStreetNumber2,\n                                e.target.value,\n                                fromState,\n                                fromZip,\n                                \"from\"\n                              );\n                            }}\n                            required\n                          />\n                        </div>\n                      </div>\n\n                      {/* fromState */}\n                      <div className=\"col-md-12\">\n                        <div className=\"form-group mb-3\">\n                          <label htmlFor=\"\">From State</label>\n                          <input\n                            type=\"text\"\n                            name=\"fromState\"\n                            id=\"fromState\"\n                            className=\"form-control\"\n                            value={fromState}\n                            onChange={(e) => {\n                              this.onChange(e);\n                              this.zipCodeLookup(\n                                fromCity,\n                                e.target.value,\n                                fromStreetNumber,\n                                fromStreetNumber2,\n                                fromZip,\n                                \"from\"\n                              );\n                              this.verifyAddress(\n                                fromStreetNumber,\n                                fromStreetNumber2,\n                                fromCity,\n                                e.target.value,\n                                \"from\"\n                              );\n                            }}\n                            maxLength={2}\n                            required\n                          />\n                        </div>\n                      </div>\n\n                      {/* fromZip */}\n                      <div className=\"col-md-12\">\n                        <div className=\"form-group mb-3\">\n                          <label htmlFor=\"\">From Zip</label>\n                          <input\n                            type=\"text\"\n                            name=\"fromZip\"\n                            id=\"fromZip\"\n                            value={fromZip}\n                            onChange={(e) => {\n                              this.onChange(e);\n                              this.cityStateLookup(e.target.value, \"from\");\n                              this.verifyAddress(\n                                fromStreetNumber,\n                                fromStreetNumber2,\n                                fromCity,\n                                fromState,\n                                e.target.value,\n                                \"from\"\n                              );\n                            }}\n                            className=\"form-control\"\n                            required\n                          />\n                        </div>\n                      </div>\n\n                      {/* fromCountry */}\n                      <div className=\"col-md-12\">\n                        <div className=\"form-group mb-3\">\n                          <label htmlFor=\"\">From Country</label>\n                          <input\n                            type=\"text\"\n                            name=\"fromCountry\"\n                            id=\"fromCountry\"\n                            className=\"form-control\"\n                            value={fromCountry}\n                            onChange={this.onChange}\n                            required\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* to */}\n              <div className=\"col-md-6\">\n                <div className=\"card\">\n                  <div className=\"card-body\">\n                    <div className=\"d-flex flex-column w-100\">\n                      {/* toName */}\n                      <div className=\"col-md-12\">\n                        <div className=\"form-group mb-3\">\n                          <label htmlFor=\"\">To Name</label>\n                          <input\n                            type=\"text\"\n                            name=\"toName\"\n                            id=\"toName\"\n                            className=\"form-control\"\n                            required\n                          />\n                        </div>\n                      </div>\n\n                      {/* toRefNumber */}\n                      <div className=\"col-md-12\">\n                        <div className=\"form-group mb-3\">\n                          <label htmlFor=\"\">To Reference Number</label>\n                          <input\n                            type=\"text\"\n                            name=\"toRefNumber\"\n                            id=\"toRefNumber\"\n                            className=\"form-control\"\n                          />\n                        </div>\n                      </div>\n\n                      {/* toStreetNumber */}\n                      <div className=\"col-md-12\">\n                        <div className=\"form-group mb-3\">\n                          <label htmlFor=\"\">To Street Number</label>\n                          <input\n                            type=\"text\"\n                            name=\"toStreetNumber\"\n                            id=\"toStreetNumber\"\n                            className=\"form-control\"\n                            value={toStreetNumber}\n                            onChange={(e) => {\n                              this.onChange(e);\n                              this.zipCodeLookup(\n                                toCity,\n                                toState,\n                                e.target.value,\n                                toStreetNumber2,\n                                \"to\"\n                              );\n                              this.verifyAddress(\n                                e.target.value,\n                                toStreetNumber2,\n                                toCity,\n                                toState,\n                                toZip,\n                                \"to\"\n                              );\n                            }}\n                            required\n                          />\n                        </div>\n                      </div>\n\n                      {/* toStreetNumber2 */}\n                      <div className=\"col-md-12\">\n                        <div className=\"form-group mb-3\">\n                          <label htmlFor=\"\">To Street Number 2</label>\n                          <input\n                            type=\"text\"\n                            name=\"toStreetNumber2\"\n                            id=\"toStreetNumber2\"\n                            className=\"form-control\"\n                            value={toStreetNumber2}\n                            onChange={(e) => {\n                              this.onChange(e);\n                              this.zipCodeLookup(\n                                toCity,\n                                toState,\n                                toStreetNumber,\n                                e.target.value,\n                                \"to\"\n                              );\n                              this.verifyAddress(\n                                toStreetNumber,\n                                e.target.value,\n                                toCity,\n                                toState,\n                                toZip,\n                                \"to\"\n                              );\n                            }}\n                          />\n                        </div>\n                      </div>\n\n                      {/* toCity */}\n                      <div className=\"col-md-12\">\n                        <div className=\"form-group mb-3\">\n                          <label htmlFor=\"\">To City</label>\n                          <input\n                            type=\"text\"\n                            name=\"toCity\"\n                            id=\"toCity\"\n                            className=\"form-control\"\n                            value={toCity}\n                            onChange={(e) => {\n                              this.onChange(e);\n                              this.zipCodeLookup(\n                                e.target.value,\n                                toState,\n                                toStreetNumber,\n                                toStreetNumber2,\n                                \"to\"\n                              );\n                              this.verifyAddress(\n                                toStreetNumber,\n                                toStreetNumber2,\n                                e.target.value,\n                                toState,\n                                toZip,\n                                \"to\"\n                              );\n                            }}\n                            required\n                          />\n                        </div>\n                      </div>\n\n                      {/* toState */}\n                      <div className=\"col-md-12\">\n                        <div className=\"form-group mb-3\">\n                          <label htmlFor=\"\">To State</label>\n                          <input\n                            type=\"text\"\n                            name=\"toState\"\n                            id=\"toState\"\n                            className=\"form-control\"\n                            value={toState}\n                            onChange={(e) => {\n                              this.onChange(e);\n                              this.zipCodeLookup(\n                                toCity,\n                                e.target.value,\n                                toStreetNumber,\n                                toStreetNumber2,\n                                \"to\"\n                              );\n                              this.verifyAddress(\n                                toStreetNumber,\n                                toStreetNumber2,\n                                toCity,\n                                e.target.value,\n                                toZip,\n                                \"to\"\n                              );\n                            }}\n                            maxLength={2}\n                            required\n                          />\n                        </div>\n                      </div>\n\n                      {/* toZip */}\n                      <div className=\"col-md-12\">\n                        <div className=\"form-group mb-3\">\n                          <label htmlFor=\"\">To Zip</label>\n                          <input\n                            type=\"text\"\n                            name=\"toZip\"\n                            id=\"toZip\"\n                            className=\"form-control\"\n                            value={toZip}\n                            onChange={(e) => {\n                              this.onChange(e);\n                              this.cityStateLookup(e.target.value, \"to\");\n                              this.verifyAddress(\n                                toStreetNumber,\n                                toStreetNumber2,\n                                toCity,\n                                toState,\n                                e.target.value,\n                                \"to\"\n                              );\n                            }}\n                            required\n                          />\n                        </div>\n                      </div>\n\n                      {/* toCountry */}\n                      <div className=\"col-md-12\">\n                        <div className=\"form-group mb-3\">\n                          <label htmlFor=\"\">To Country</label>\n                          <input\n                            type=\"text\"\n                            name=\"toCountry\"\n                            id=\"toCountry\"\n                            className=\"form-control\"\n                            value={toCountry}\n                            onChange={this.onChange}\n                            required\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-12\">\n              <div className=\"form-group text-end mb-3\">\n                <button type=\"submit\" className=\"btn btn-primary\">\n                  Generate Label {loader}\n                </button>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n","import { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\n// Helper Components\nimport Sidebar from \"../components/Sidebar\";\nimport Barcodes from \"../source/Barcodes\";\nimport Dashboard from \"../source/Dashboard\";\nimport Labels from \"../source/Labels\";\nimport Settings from \"../source/Settings\";\nimport Stats from \"../source/Stats\";\nimport Users from \"../source/Users\";\nimport Workers from \"../source/Workers\";\nimport Tickets from \"../source/Ticket\";\nimport Pricing from \"../source/Pricing\";\nimport GeneateLabels from \"../source/GeneateLabel\";\n\nexport default function AuthRouter() {\n  document.body.classList.remove(\"d-flex-grid\");\n  document.body.classList.remove(\"bg-auth\");\n\n  return (\n    <BrowserRouter>\n      <Sidebar />\n      <Switch>\n        <Route path=\"/pricing/:userid\" component={Pricing} />\n        <Route path=\"/pricing\" component={Pricing} />\n        <Route path=\"/tickets\" component={Tickets} />\n        <Route path=\"/users\" component={Users} />\n        <Route path=\"/website\" component={Stats} />\n        <Route path=\"/settings\" component={Settings} />\n        <Route path=\"/workers\" component={Workers} />\n        <Route path=\"/generate-label\" component={GeneateLabels} />\n        <Route path=\"/labels\" component={Labels} />\n        <Route path=\"/barcodes\" component={Barcodes} />\n        <Route path=\"/\" component={Dashboard} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n","import React, { PureComponent } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport { server, config } from \"./env\";\n\n// Componenets\nimport PageLoader from \"./components/PageLoader\";\n\n// Routes\nimport AuthRouter from \"./routes/AuthRouter\";\nimport DashboardRouter from \"./routes/DashboardRouter\";\n\nclass App extends PureComponent {\n  state = {\n    token: Cookies.get(\"footprint\"),\n    isLogin: false,\n    isAllLoaded: false,\n  };\n\n  componentDidMount = async () => {\n    await this.checkUserLogin(this.state.token);\n  };\n\n  checkUserLogin = async (token) => {\n    await axios(server + \"/api/admin/access\", config)\n      .then((rsp) => {\n        this.setState({\n          isAllLoaded: true,\n          isLogin: true,\n        });\n      })\n      .catch((err) => {\n        this.setState({\n          isAllLoaded: true,\n          isLogin: false,\n        });\n      });\n  };\n\n  render() {\n    const { isLogin, isAllLoaded } = this.state;\n    return isAllLoaded ? (\n      <BrowserRouter>\n        {isLogin ? (\n          <Switch>\n            <Route path=\"/\" component={DashboardRouter} />\n          </Switch>\n        ) : (\n          <Switch>\n            <Route path=\"/\" component={AuthRouter} />\n          </Switch>\n        )}\n      </BrowserRouter>\n    ) : (\n      <PageLoader />\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","function BarChart(dom, data) {\n  var Chart = window.Chart;\n  new Chart(dom, {\n    type: \"bar\",\n    options: {\n      scales: {\n        yAxes: [\n          {\n            ticks: {\n              callback: function (e) {\n                return e;\n              },\n            },\n            gridLines: {\n              display: false,\n            },\n          },\n        ],\n      },\n    },\n    data,\n  });\n  return Chart;\n}\n\nfunction PieChart(dom, data) {\n  var Chart = window.Chart;\n  new Chart(dom, {\n    type: \"doughnut\",\n    options: {\n      tooltips: {\n        callbacks: {\n          beforeLabel: function () {\n            return \"€\";\n          },\n        },\n      },\n      legend: {\n        labels: {\n          generateLabels: function (chart) {},\n        },\n      },\n    },\n    data,\n  });\n  return Chart;\n}\n\nfunction LineChart(dom, data) {\n  var Chart = window.Chart;\n  new Chart(dom, {\n    type: \"line\",\n    options: {\n      scales: {\n        yAxes: [\n          {\n            ticks: {\n              callback: function (value) {\n                return value + \" Label\";\n              },\n            },\n            gridLines: {\n              display: false,\n            },\n          },\n        ],\n      },\n    },\n    data,\n  });\n  return Chart;\n}\n\nfunction Legend(data) {\n  let content = \"\";\n\n  data.labels.forEach(function (label, index) {\n    const bgColor = data.datasets[0].backgroundColor[index];\n\n    content += '<span class=\"chart-legend-item\">';\n    content +=\n      '<i class=\"chart-legend-indicator\" style=\"background-color: ' +\n      bgColor +\n      '\"></i>';\n    content += label;\n    content += \"</span>\";\n  });\n  return content;\n}\n\nconst quillToolbarOptions = [\n  [\"bold\", \"italic\", \"underline\", \"strike\", \"image\", \"code\"], // toggled buttons\n  [\"blockquote\", \"code-block\"],\n\n  [{ header: 1 }, { header: 2 }], // custom button values\n  [{ list: \"ordered\" }, { list: \"bullet\" }],\n  [{ script: \"sub\" }, { script: \"super\" }], // superscript/subscript\n  [{ indent: \"-1\" }, { indent: \"+1\" }], // outdent/indent\n  [{ direction: \"rtl\" }], // text direction\n\n  [{ size: [\"small\", false, \"large\", \"huge\"] }], // custom dropdown\n  [{ header: [1, 2, 3, 4, 5, 6, false] }],\n\n  [{ color: [] }, { background: [] }], // dropdown with defaults from theme\n  [{ font: [] }],\n  [{ align: [] }],\n\n  [\"clean\"], // remove formatting button\n];\n\nmodule.exports = {\n  BarChart,\n  PieChart,\n  LineChart,\n  Legend,\n  quillToolbarOptions,\n  hideModal: function (id) {\n    const dom = document.getElementById(\"close\" + id);\n    if (dom) dom.click();\n  },\n};\n","const Cookies = require(\"js-cookie\");\n\nmodule.exports = {\n  server: window.location.href.includes(\"localhost\")\n    ? \"http://localhost:7400\"\n    : \"https://api.labelaxxess.com\",\n\n  config: {\n    headers: {\n      Authorization: \"Bearer \" + Cookies.get(\"footprint\"),\n    },\n  },\n\n  // recaptcha keys\n  RECAPTCHA_KEY: \"6LdG1AMjAAAAAOeHyOPzPV5zBbStTqiyXrkfu91r\",\n  checkAccess: (err) => {\n    if (err.response) {\n      if (err.response.status === 401) {\n        Cookies.remove(\"footprint\");\n        window.location.href = \"/\";\n      }\n    }\n    return true;\n  },\n};\n"],"sourceRoot":""}